{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useAuth } from \"../contexts/AuthContext\";\nexport const useAxios = () => {\n  _s();\n  const {\n    user,\n    refreshToken\n  } = useAuth();\n  const axiosInstance = axios.create({\n    baseURL: \"http://localhost:8000/api/\",\n    headers: {\n      Authorization: user ? `Bearer ${localStorage.getItem(\"token\")}` : \"\"\n    }\n  });\n  axiosInstance.interceptors.response.use(response => response, async error => {\n    const originalRequest = error.config;\n    if (error.response && error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      try {\n        await refreshToken();\n        originalRequest.headers[\"Authorization\"] = `Bearer ${localStorage.getItem(\"token\")}`;\n        return axiosInstance(originalRequest);\n      } catch (refreshError) {\n        console.error(\"Token refresh failed, logging out...\");\n        logout(); // Clear session and redirect to login\n        return Promise.reject(refreshError);\n      }\n    }\n    return Promise.reject(error);\n  });\n  return axiosInstance;\n};\n_s(useAxios, \"aYH8FL5z5Knl/bgbXs84tFY9/iA=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"names":["axios","useAuth","useAxios","_s","user","refreshToken","axiosInstance","create","baseURL","headers","Authorization","localStorage","getItem","interceptors","response","use","error","originalRequest","config","status","_retry","refreshError","console","logout","Promise","reject"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/utils/useAxios.js"],"sourcesContent":["import axios from \"axios\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nexport const useAxios = () => {\n  const { user, refreshToken } = useAuth();\n\n  const axiosInstance = axios.create({\n    baseURL: \"http://localhost:8000/api/\",\n    headers: {\n      Authorization: user ? `Bearer ${localStorage.getItem(\"token\")}` : \"\",\n    },\n  });\n\n  axiosInstance.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n      const originalRequest = error.config;\n\n      if (\n        error.response &&\n        error.response.status === 401 &&\n        !originalRequest._retry\n      ) {\n        originalRequest._retry = true;\n        try {\n          await refreshToken();\n          originalRequest.headers[\n            \"Authorization\"\n          ] = `Bearer ${localStorage.getItem(\"token\")}`;\n          return axiosInstance(originalRequest);\n        } catch (refreshError) {\n          console.error(\"Token refresh failed, logging out...\");\n          logout(); // Clear session and redirect to login\n          return Promise.reject(refreshError);\n        }\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  return axiosInstance;\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,yBAAyB;AAEjD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC,IAAI;IAAEC;EAAa,CAAC,GAAGJ,OAAO,CAAC,CAAC;EAExC,MAAMK,aAAa,GAAGN,KAAK,CAACO,MAAM,CAAC;IACjCC,OAAO,EAAE,4BAA4B;IACrCC,OAAO,EAAE;MACPC,aAAa,EAAEN,IAAI,GAAG,UAAUO,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,GAAG;IACpE;EACF,CAAC,CAAC;EAEFN,aAAa,CAACO,YAAY,CAACC,QAAQ,CAACC,GAAG,CACpCD,QAAQ,IAAKA,QAAQ,EACtB,MAAOE,KAAK,IAAK;IACf,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAM;IAEpC,IACEF,KAAK,CAACF,QAAQ,IACdE,KAAK,CAACF,QAAQ,CAACK,MAAM,KAAK,GAAG,IAC7B,CAACF,eAAe,CAACG,MAAM,EACvB;MACAH,eAAe,CAACG,MAAM,GAAG,IAAI;MAC7B,IAAI;QACF,MAAMf,YAAY,CAAC,CAAC;QACpBY,eAAe,CAACR,OAAO,CACrB,eAAe,CAChB,GAAG,UAAUE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC7C,OAAON,aAAa,CAACW,eAAe,CAAC;MACvC,CAAC,CAAC,OAAOI,YAAY,EAAE;QACrBC,OAAO,CAACN,KAAK,CAAC,sCAAsC,CAAC;QACrDO,MAAM,CAAC,CAAC,CAAC,CAAC;QACV,OAAOC,OAAO,CAACC,MAAM,CAACJ,YAAY,CAAC;MACrC;IACF;IACA,OAAOG,OAAO,CAACC,MAAM,CAACT,KAAK,CAAC;EAC9B,CACF,CAAC;EAED,OAAOV,aAAa;AACtB,CAAC;AAACH,EAAA,CAtCWD,QAAQ;EAAA,QACYD,OAAO;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}