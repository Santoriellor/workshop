{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/ClientContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:8000\";\nexport const ClientContext = /*#__PURE__*/createContext();\nexport const ClientProvider = ({\n  children\n}) => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Helper function to get headers with token\n  const getHeaders = () => {\n    const token = localStorage.getItem(\"access_token\");\n    if (!token) {\n      setError(\"User is not authenticated\");\n      return null;\n    }\n    return {\n      Authorization: `Bearer ${token}`\n    };\n  };\n\n  // Fetch clients from the server\n  const fetchClients = async () => {\n    const headers = getHeaders();\n    if (!headers) return;\n    try {\n      setLoading(true);\n      const response = await axios.get(\"http://localhost:8000/api/clients/\", {\n        headers\n      });\n      setClients(response.data);\n    } catch (err) {\n      console.error(\"Error fetching clients:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new client\n  const createClient = async newClient => {\n    const headers = getHeaders();\n    if (!headers) return;\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/clients/\", newClient, {\n        headers\n      });\n      setClients([...clients, response.data]);\n    } catch (err) {\n      console.error(\"Error creating client:\", err);\n      setError(err.message);\n    }\n  };\n\n  // Update a client\n  const updateClient = async (id, updatedClient) => {\n    const headers = getHeaders();\n    if (!headers) return;\n    try {\n      const response = await axios.put(`http://localhost:8000/api/clients/${id}/`, updatedClient, {\n        headers\n      });\n      setClients(clients.map(client => client.id === id ? {\n        ...client,\n        ...response.data\n      } : client));\n    } catch (err) {\n      console.error(\"Error updating client:\", err);\n      setError(err.message);\n    }\n  };\n\n  // Delete a client\n  const deleteClient = async id => {\n    const headers = getHeaders();\n    if (!headers) return;\n    try {\n      await axios.delete(`http://localhost:8000/api/clients/${id}/`, {\n        headers\n      });\n      setClients(clients.filter(client => client.id !== id));\n    } catch (err) {\n      console.error(\"Error deleting client:\", err);\n      setError(err.message);\n    }\n  };\n\n  // Trigger fetchReports only when the token exists\n  useEffect(() => {\n    const token = localStorage.getItem(\"access_token\");\n    if (token) {\n      fetchClients();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ClientContext.Provider, {\n    value: {\n      clients,\n      selectedClient,\n      setSelectedClient,\n      fetchClients,\n      createClient,\n      updateClient,\n      deleteClient,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientProvider, \"bY63OTlYI/+FcVFzArNNPf9uHQ0=\");\n_c = ClientProvider;\nvar _c;\n$RefreshReg$(_c, \"ClientProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","BASE_URL","ClientContext","ClientProvider","children","_s","clients","setClients","selectedClient","setSelectedClient","loading","setLoading","error","setError","getHeaders","token","localStorage","getItem","Authorization","fetchClients","headers","response","get","data","err","console","message","createClient","newClient","post","updateClient","id","updatedClient","put","map","client","deleteClient","delete","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/ClientContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst BASE_URL = \"http://localhost:8000\";\n\nexport const ClientContext = createContext();\n\nexport const ClientProvider = ({ children }) => {\n  const [clients, setClients] = useState([]);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Helper function to get headers with token\n  const getHeaders = () => {\n    const token = localStorage.getItem(\"access_token\");\n    if (!token) {\n      setError(\"User is not authenticated\");\n      return null;\n    }\n    return {\n      Authorization: `Bearer ${token}`,\n    };\n  };\n\n  // Fetch clients from the server\n  const fetchClients = async () => {\n    const headers = getHeaders();\n    if (!headers) return;\n\n    try {\n      setLoading(true);\n      const response = await axios.get(\"http://localhost:8000/api/clients/\", {\n        headers,\n      });\n      setClients(response.data);\n    } catch (err) {\n      console.error(\"Error fetching clients:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new client\n  const createClient = async (newClient) => {\n    const headers = getHeaders();\n    if (!headers) return;\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:8000/api/clients/\",\n        newClient,\n        { headers }\n      );\n      setClients([...clients, response.data]);\n    } catch (err) {\n      console.error(\"Error creating client:\", err);\n      setError(err.message);\n    }\n  };\n\n  // Update a client\n  const updateClient = async (id, updatedClient) => {\n    const headers = getHeaders();\n    if (!headers) return;\n\n    try {\n      const response = await axios.put(\n        `http://localhost:8000/api/clients/${id}/`,\n        updatedClient,\n        { headers }\n      );\n      setClients(\n        clients.map((client) =>\n          client.id === id ? { ...client, ...response.data } : client\n        )\n      );\n    } catch (err) {\n      console.error(\"Error updating client:\", err);\n      setError(err.message);\n    }\n  };\n\n  // Delete a client\n  const deleteClient = async (id) => {\n    const headers = getHeaders();\n    if (!headers) return;\n\n    try {\n      await axios.delete(`http://localhost:8000/api/clients/${id}/`, {\n        headers,\n      });\n      setClients(clients.filter((client) => client.id !== id));\n    } catch (err) {\n      console.error(\"Error deleting client:\", err);\n      setError(err.message);\n    }\n  };\n\n  // Trigger fetchReports only when the token exists\n  useEffect(() => {\n    const token = localStorage.getItem(\"access_token\");\n    if (token) {\n      fetchClients();\n    }\n  }, []);\n\n  return (\n    <ClientContext.Provider\n      value={{\n        clients,\n        selectedClient,\n        setSelectedClient,\n        fetchClients,\n        createClient,\n        updateClient,\n        deleteClient,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </ClientContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}