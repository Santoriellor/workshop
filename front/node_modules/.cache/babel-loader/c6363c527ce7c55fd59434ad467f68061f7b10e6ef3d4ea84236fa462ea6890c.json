{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    data: users,\n    fetchData: fetchUsers,\n    loading: loadingUsers,\n    error: errorUsers\n  } = useCRUD(\"users\");\n\n  // Function to get username by ID\n  const getUserNameById = userId => {\n    const user = users.find(user => user.id === userId);\n    return user ? user.username : \"Unknown\";\n  };\n\n  // Automatically fetch data on first load\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      users,\n      getUserNameById,\n      loadingUsers,\n      errorUsers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the UserContext\n_s(UserProvider, \"x96UNdwtXWDKXcN2ihyNv/SIFHk=\", false, function () {\n  return [useCRUD];\n});\n_c = UserProvider;\nexport const useUserContext = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUserContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useCRUD","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","data","users","fetchData","fetchUsers","loading","loadingUsers","error","errorUsers","getUserNameById","userId","user","find","id","username","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserContext","_s2","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n\nexport const UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const {\n    data: users,\n    fetchData: fetchUsers,\n    loading: loadingUsers,\n    error: errorUsers,\n  } = useCRUD(\"users\");\n\n  // Function to get username by ID\n  const getUserNameById = (userId) => {\n    const user = users.find((user) => user.id === userId);\n    return user ? user.username : \"Unknown\";\n  };\n\n  // Automatically fetch data on first load\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        users,\n        getUserNameById,\n        loadingUsers,\n        errorUsers,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\n// Custom hook to use the UserContext\nexport const useUserContext = () => useContext(UserContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACnE;AACA,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM;IACJC,IAAI,EAAEC,KAAK;IACXC,SAAS,EAAEC,UAAU;IACrBC,OAAO,EAAEC,YAAY;IACrBC,KAAK,EAAEC;EACT,CAAC,GAAGd,OAAO,CAAC,OAAO,CAAC;;EAEpB;EACA,MAAMe,eAAe,GAAIC,MAAM,IAAK;IAClC,MAAMC,IAAI,GAAGT,KAAK,CAACU,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKH,MAAM,CAAC;IACrD,OAAOC,IAAI,GAAGA,IAAI,CAACG,QAAQ,GAAG,SAAS;EACzC,CAAC;;EAED;EACArB,SAAS,CAAC,MAAM;IACdW,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBACER,OAAA,CAACC,WAAW,CAACkB,QAAQ;IACnBC,KAAK,EAAE;MACLd,KAAK;MACLO,eAAe;MACfH,YAAY;MACZE;IACF,CAAE;IAAAT,QAAA,EAEDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAApB,EAAA,CAjCaF,YAAY;EAAA,QAMnBJ,OAAO;AAAA;AAAA2B,EAAA,GANAvB,YAAY;AAkCzB,OAAO,MAAMwB,cAAc,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM/B,UAAU,CAACK,WAAW,CAAC;AAAA;AAAC0B,GAAA,CAA/CD,cAAc;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}