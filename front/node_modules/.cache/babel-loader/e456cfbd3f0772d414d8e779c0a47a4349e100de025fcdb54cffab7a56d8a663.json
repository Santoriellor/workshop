{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/components/FilterBar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { ClientContext } from \"../contexts/ClientContext\";\nimport { ReportContext } from \"../contexts/ClientContext\";\nimport \"../styles/FilterBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterBar = ({\n  filterOptions,\n  onFilterChange\n}) => {\n  _s();\n  const {\n    clients\n  } = useContext(ClientContext);\n  const {\n    reports\n  } = useContext(ReportContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-bar\",\n    children: filterOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: option.name,\n        children: option.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), option.type === \"select\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n        id: option.name,\n        name: option.name,\n        value: option.value,\n        onChange: e => onFilterChange(option.name, e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: [\"Select \", option.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this), option.name === \"client\" && clients.map(client => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: client.id,\n          children: client.name\n        }, client.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }, this)), option.name === \"created_date\" &&\n        // Extract unique and sorted dates\n        [...new Set(reports.map(report => report.created_date))].sort((a, b) => new Date(a) - new Date(b)) // Sort in ascending order\n        .map(uniqueDate => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: uniqueDate,\n          children: uniqueDate\n        }, uniqueDate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: option.type || \"text\",\n        id: option.name,\n        name: option.name,\n        value: option.value,\n        onChange: e => onFilterChange(option.name, e.target.value),\n        placeholder: option.placeholder || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, option.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterBar, \"9sIINePfVkvQVK0USdtAFiMqCFY=\");\n_c = FilterBar;\nexport default FilterBar;\nvar _c;\n$RefreshReg$(_c, \"FilterBar\");","map":{"version":3,"names":["React","useContext","ClientContext","ReportContext","jsxDEV","_jsxDEV","FilterBar","filterOptions","onFilterChange","_s","clients","reports","className","children","map","option","htmlFor","name","label","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","client","Set","report","created_date","sort","a","b","Date","uniqueDate","placeholder","_c","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/components/FilterBar.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { ClientContext } from \"../contexts/ClientContext\";\nimport { ReportContext } from \"../contexts/ClientContext\";\nimport \"../styles/FilterBar.css\";\n\nconst FilterBar = ({ filterOptions, onFilterChange }) => {\n  const { clients } = useContext(ClientContext);\n  const { reports } = useContext(ReportContext);\n\n  return (\n    <div className=\"filter-bar\">\n      {filterOptions.map((option) => (\n        <div className=\"filter-group\" key={option.name}>\n          <label htmlFor={option.name}>{option.label}</label>\n          {option.type === \"select\" ? (\n            <select\n              id={option.name}\n              name={option.name}\n              value={option.value}\n              onChange={(e) => onFilterChange(option.name, e.target.value)}\n            >\n              <option value=\"\">Select {option.label}</option>\n\n              {option.name === \"client\" &&\n                clients.map((client) => (\n                  <option key={client.id} value={client.id}>\n                    {client.name}\n                  </option>\n                ))}\n              {option.name === \"created_date\" &&\n                // Extract unique and sorted dates\n                [...new Set(reports.map((report) => report.created_date))]\n                  .sort((a, b) => new Date(a) - new Date(b)) // Sort in ascending order\n                  .map((uniqueDate) => (\n                    <option key={uniqueDate} value={uniqueDate}>\n                      {uniqueDate}\n                    </option>\n                  ))}\n            </select>\n          ) : (\n            <input\n              type={option.type || \"text\"}\n              id={option.name}\n              name={option.name}\n              value={option.value}\n              onChange={(e) => onFilterChange(option.name, e.target.value)}\n              placeholder={option.placeholder || \"\"}\n            />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default FilterBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}