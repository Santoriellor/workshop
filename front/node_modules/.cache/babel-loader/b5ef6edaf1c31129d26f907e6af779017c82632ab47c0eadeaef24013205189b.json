{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/ClientContext.js\",\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { useAxios } from \"../utils/useAxios\";\nimport { useAuth } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:8000\";\nexport const ClientContext = /*#__PURE__*/createContext();\nexport const ClientProvider = ({\n  children\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    user\n  } = useAuth();\n  const axiosInstance = useAxios();\n  const [clients, setClients] = useState([]);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Centralized error handling\n  const handleError = err => {\n    console.error(err.message || \"An error occurred\");\n    setError(err.message || \"An error occurred\");\n  };\n\n  // Helper function to get headers with token\n  const getHeaders = () => {\n    const token = localStorage.getItem(\"access_token\");\n    if (!token) {\n      throw new Error(\"User is not authenticated\");\n    }\n    return {\n      Authorization: `Bearer ${token}`\n    };\n  };\n\n  // Create a new client\n  const createClient = async newClient => {\n    if (!user) throw new Error(\"User is not authenticated\");\n    try {\n      const response = await axiosInstance.post(`${BASE_URL}/api/clients/`, newClient, {\n        headers: getHeaders()\n      });\n      setClients([...clients, response.data]);\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Update a client\n  const updateClient = async (id, updatedClient) => {\n    if (!user) throw new Error(\"User is not authenticated\");\n    try {\n      const response = await axiosInstance.put(`${BASE_URL}/api/clients/${id}/`, updatedClient, {\n        headers: getHeaders()\n      });\n      setClients(clients.map(client => client.id === id ? {\n        ...client,\n        ...response.data\n      } : client));\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Delete a client\n  const deleteClient = async id => {\n    if (!user) throw new Error(\"User is not authenticated\");\n    try {\n      await axiosInstance.delete(`${BASE_URL}/api/clients/${id}/`, {\n        headers: getHeaders()\n      });\n      setClients(clients.filter(client => client.id !== id));\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Fetch clients when the provider mounts or when the user changes\n  _s(useEffect(_s(() => {\n    _s();\n    // Fetch clients from the server\n    const fetchClients = useCallback(async () => {\n      if (!user) return;\n      try {\n        setLoading(true);\n        const response = await axiosInstance.get(`${BASE_URL}/api/clients/`, {\n          headers: getHeaders()\n        });\n        setClients(response.data);\n      } catch (err) {\n        handleError(err);\n      } finally {\n        setLoading(false);\n      }\n    }, [user]);\n    if (user) {\n      fetchClients();\n    } else {\n      setClients([]);\n    }\n  }, \"6kG3S388GGg3csMcmHpudtHY1Es=\"), [user]), \"6kG3S388GGg3csMcmHpudtHY1Es=\");\n  return /*#__PURE__*/_jsxDEV(ClientContext.Provider, {\n    value: {\n      clients,\n      selectedClient,\n      setSelectedClient,\n      fetchClients,\n      createClient,\n      updateClient,\n      deleteClient,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s2(ClientProvider, \"rmLz9hUPaBYjRnRQ2bbiZrdRWnw=\", false, function () {\n  return [useAuth, useAxios];\n});\n_c = ClientProvider;\nvar _c;\n$RefreshReg$(_c, \"ClientProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useAxios","useAuth","jsxDEV","_jsxDEV","BASE_URL","ClientContext","ClientProvider","children","_s2","_s","$RefreshSig$","user","axiosInstance","clients","setClients","selectedClient","setSelectedClient","loading","setLoading","error","setError","handleError","err","console","message","getHeaders","token","localStorage","getItem","Error","Authorization","createClient","newClient","response","post","headers","data","updateClient","id","updatedClient","put","map","client","deleteClient","delete","filter","fetchClients","useCallback","get","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/ClientContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { useAxios } from \"../utils/useAxios\";\nimport { useAuth } from \"./AuthContext\";\n\nconst BASE_URL = \"http://localhost:8000\";\n\nexport const ClientContext = createContext();\n\nexport const ClientProvider = ({ children }) => {\n  const { user } = useAuth();\n  const axiosInstance = useAxios();\n  const [clients, setClients] = useState([]);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Centralized error handling\n  const handleError = (err) => {\n    console.error(err.message || \"An error occurred\");\n    setError(err.message || \"An error occurred\");\n  };\n\n  // Helper function to get headers with token\n  const getHeaders = () => {\n    const token = localStorage.getItem(\"access_token\");\n    if (!token) {\n      throw new Error(\"User is not authenticated\");\n    }\n    return {\n      Authorization: `Bearer ${token}`,\n    };\n  };\n\n  // Create a new client\n  const createClient = async (newClient) => {\n    if (!user) throw new Error(\"User is not authenticated\");\n\n    try {\n      const response = await axiosInstance.post(\n        `${BASE_URL}/api/clients/`,\n        newClient,\n        {\n          headers: getHeaders(),\n        }\n      );\n      setClients([...clients, response.data]);\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Update a client\n  const updateClient = async (id, updatedClient) => {\n    if (!user) throw new Error(\"User is not authenticated\");\n\n    try {\n      const response = await axiosInstance.put(\n        `${BASE_URL}/api/clients/${id}/`,\n        updatedClient,\n        { headers: getHeaders() }\n      );\n      setClients(\n        clients.map((client) =>\n          client.id === id ? { ...client, ...response.data } : client\n        )\n      );\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Delete a client\n  const deleteClient = async (id) => {\n    if (!user) throw new Error(\"User is not authenticated\");\n\n    try {\n      await axiosInstance.delete(`${BASE_URL}/api/clients/${id}/`, {\n        headers: getHeaders(),\n      });\n      setClients(clients.filter((client) => client.id !== id));\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Fetch clients when the provider mounts or when the user changes\n  useEffect(() => {\n    // Fetch clients from the server\n    const fetchClients = useCallback(async () => {\n      if (!user) return;\n\n      try {\n        setLoading(true);\n        const response = await axiosInstance.get(`${BASE_URL}/api/clients/`, {\n          headers: getHeaders(),\n        });\n        setClients(response.data);\n      } catch (err) {\n        handleError(err);\n      } finally {\n        setLoading(false);\n      }\n    }, [user]);\n    if (user) {\n      fetchClients();\n    } else {\n      setClients([]);\n    }\n  }, [user]);\n\n  return (\n    <ClientContext.Provider\n      value={{\n        clients,\n        selectedClient,\n        setSelectedClient,\n        fetchClients,\n        createClient,\n        updateClient,\n        deleteClient,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </ClientContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}