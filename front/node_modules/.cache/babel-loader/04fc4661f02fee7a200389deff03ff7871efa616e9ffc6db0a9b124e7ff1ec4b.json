{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/GlobalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/createContext();\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedItems, setSelectedItems] = useState({});\n  const setSelectedItem = (itemType, item) => {\n    setSelectedItems(prev => ({\n      ...prev,\n      [itemType]: item\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      selectedItems,\n      setSelectedItem\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the GlobalContext\n_s(GlobalProvider, \"JwSt3ouIPJSTTBbzXRGsaT0Nt0A=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCRUD","jsxDEV","_jsxDEV","GlobalContext","GlobalProvider","children","_s","selectedItems","setSelectedItems","setSelectedItem","itemType","item","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/GlobalContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n\nexport const GlobalContext = createContext();\n\nexport const GlobalProvider = ({ children }) => {\n  const [selectedItems, setSelectedItems] = useState({});\n\n  const setSelectedItem = (itemType, item) => {\n    setSelectedItems((prev) => ({ ...prev, [itemType]: item }));\n  };\n\n  return (\n    <GlobalContext.Provider value={{ selectedItems, setSelectedItem }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n\n// Custom hook to use the GlobalContext\nexport const useGlobalContext = () => useContext(GlobalContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE;AACA,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,aAAa,gBAAGN,aAAa,CAAC,CAAC;AAE5C,OAAO,MAAMO,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAMU,eAAe,GAAGA,CAACC,QAAQ,EAAEC,IAAI,KAAK;IAC1CH,gBAAgB,CAAEI,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACF,QAAQ,GAAGC;IAAK,CAAC,CAAC,CAAC;EAC7D,CAAC;EAED,oBACET,OAAA,CAACC,aAAa,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEP,aAAa;MAAEE;IAAgB,CAAE;IAAAJ,QAAA,EAC/DA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;;AAED;AAAAZ,EAAA,CAdaF,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAe3B,OAAO,MAAMgB,gBAAgB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvB,UAAU,CAACK,aAAa,CAAC;AAAA;AAACkB,GAAA,CAAnDD,gBAAgB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}