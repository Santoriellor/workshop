{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/VehicleContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n// Utils\nimport withSuccessAlert from \"../utils/successAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VehicleContext = /*#__PURE__*/createContext();\nexport const VehicleProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedVehicle, setSelectedVehicle] = useState(null);\n  const {\n    data: vehicles,\n    fetchData: fetchVehicles,\n    createItem: createVehicle,\n    updateItem: updateVehicle,\n    deleteItem: deleteVehicle,\n    loading,\n    error\n  } = useCRUD(\"vehicles\");\n\n  // Create a vehicle with success alert\n  const createVehicleWithAlert = withSuccessAlert(createVehicle, \"Vehicle created successfully!\");\n  // Update a vehicle with success alert\n  const updateVehicleWithAlert = withSuccessAlert(updateVehicle, \"Vehicle updated successfully!\");\n  // Delete a vehicle with success alert\n  const deleteVehicleWithAlert = withSuccessAlert(deleteVehicle, \"Vehicle deleted successfully!\");\n\n  // Function to get the vehicle description by vehicle ID\n  const getVehicleInfoByVehicleId = vehicleId => {\n    const vehicle = vehicles.find(vehicle => vehicle.id === vehicleId);\n    return vehicle ? vehicle.__str__ : \"Unknown\";\n  };\n\n  // Automatically fetch data on first load\n  useEffect(() => {\n    fetchVehicles({}, \"brand\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(VehicleContext.Provider, {\n    value: {\n      vehicles,\n      selectedVehicle,\n      setSelectedVehicle,\n      createVehicleWithAlert,\n      updateVehicleWithAlert,\n      deleteVehicleWithAlert,\n      getVehicleInfoByVehicleId,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for accessing the VehicleContext\n_s(VehicleProvider, \"GxogQ3Ya6efMpt0iHeyrk/kZzDw=\", false, function () {\n  return [useCRUD];\n});\n_c = VehicleProvider;\nexport const useVehicleContext = () => {\n  _s2();\n  return useContext(VehicleContext);\n};\n_s2(useVehicleContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"VehicleProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCRUD","withSuccessAlert","jsxDEV","_jsxDEV","VehicleContext","VehicleProvider","children","_s","selectedVehicle","setSelectedVehicle","data","vehicles","fetchData","fetchVehicles","createItem","createVehicle","updateItem","updateVehicle","deleteItem","deleteVehicle","loading","error","createVehicleWithAlert","updateVehicleWithAlert","deleteVehicleWithAlert","getVehicleInfoByVehicleId","vehicleId","vehicle","find","id","__str__","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useVehicleContext","_s2","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/VehicleContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n// Utils\nimport withSuccessAlert from \"../utils/successAlert\";\n\nconst VehicleContext = createContext();\n\nexport const VehicleProvider = ({ children }) => {\n  const [selectedVehicle, setSelectedVehicle] = useState(null);\n\n  const {\n    data: vehicles,\n    fetchData: fetchVehicles,\n    createItem: createVehicle,\n    updateItem: updateVehicle,\n    deleteItem: deleteVehicle,\n    loading,\n    error,\n  } = useCRUD(\"vehicles\");\n\n  // Create a vehicle with success alert\n  const createVehicleWithAlert = withSuccessAlert(\n    createVehicle,\n    \"Vehicle created successfully!\"\n  );\n  // Update a vehicle with success alert\n  const updateVehicleWithAlert = withSuccessAlert(\n    updateVehicle,\n    \"Vehicle updated successfully!\"\n  );\n  // Delete a vehicle with success alert\n  const deleteVehicleWithAlert = withSuccessAlert(\n    deleteVehicle,\n    \"Vehicle deleted successfully!\"\n  );\n\n  // Function to get the vehicle description by vehicle ID\n  const getVehicleInfoByVehicleId = (vehicleId) => {\n    const vehicle = vehicles.find((vehicle) => vehicle.id === vehicleId);\n    return vehicle ? vehicle.__str__ : \"Unknown\";\n  };\n\n  // Automatically fetch data on first load\n  useEffect(() => {\n    fetchVehicles({}, \"brand\");\n  }, []);\n\n  return (\n    <VehicleContext.Provider\n      value={{\n        vehicles,\n        selectedVehicle,\n        setSelectedVehicle,\n        createVehicleWithAlert,\n        updateVehicleWithAlert,\n        deleteVehicleWithAlert,\n        getVehicleInfoByVehicleId,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </VehicleContext.Provider>\n  );\n};\n\n// Custom hook for accessing the VehicleContext\nexport const useVehicleContext = () => useContext(VehicleContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E;AACA,OAAOC,OAAO,MAAM,kBAAkB;AACtC;AACA,OAAOC,gBAAgB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,cAAc,gBAAGR,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMS,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAM;IACJY,IAAI,EAAEC,QAAQ;IACdC,SAAS,EAAEC,aAAa;IACxBC,UAAU,EAAEC,aAAa;IACzBC,UAAU,EAAEC,aAAa;IACzBC,UAAU,EAAEC,aAAa;IACzBC,OAAO;IACPC;EACF,CAAC,GAAGrB,OAAO,CAAC,UAAU,CAAC;;EAEvB;EACA,MAAMsB,sBAAsB,GAAGrB,gBAAgB,CAC7Cc,aAAa,EACb,+BACF,CAAC;EACD;EACA,MAAMQ,sBAAsB,GAAGtB,gBAAgB,CAC7CgB,aAAa,EACb,+BACF,CAAC;EACD;EACA,MAAMO,sBAAsB,GAAGvB,gBAAgB,CAC7CkB,aAAa,EACb,+BACF,CAAC;;EAED;EACA,MAAMM,yBAAyB,GAAIC,SAAS,IAAK;IAC/C,MAAMC,OAAO,GAAGhB,QAAQ,CAACiB,IAAI,CAAED,OAAO,IAAKA,OAAO,CAACE,EAAE,KAAKH,SAAS,CAAC;IACpE,OAAOC,OAAO,GAAGA,OAAO,CAACG,OAAO,GAAG,SAAS;EAC9C,CAAC;;EAED;EACA/B,SAAS,CAAC,MAAM;IACdc,aAAa,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAACC,cAAc,CAAC2B,QAAQ;IACtBC,KAAK,EAAE;MACLrB,QAAQ;MACRH,eAAe;MACfC,kBAAkB;MAClBa,sBAAsB;MACtBC,sBAAsB;MACtBC,sBAAsB;MACtBC,yBAAyB;MACzBL,OAAO;MACPC;IACF,CAAE;IAAAf,QAAA,EAEDA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;;AAED;AAAA7B,EAAA,CA3DaF,eAAe;EAAA,QAWtBL,OAAO;AAAA;AAAAqC,EAAA,GAXAhC,eAAe;AA4D5B,OAAO,MAAMiC,iBAAiB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM1C,UAAU,CAACO,cAAc,CAAC;AAAA;AAACmC,GAAA,CAArDD,iBAAiB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}