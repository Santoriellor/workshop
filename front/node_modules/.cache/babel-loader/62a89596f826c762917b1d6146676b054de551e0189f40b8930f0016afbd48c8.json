{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/components/buttons/CreateItemButton.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\n// Contexts\nimport { useGlobalContext } from \"../../contexts/GlobalContext\";\n// Styles\nimport \"../../styles/CreateItemButton.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateItemButton = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    modalComponent,\n    openModal,\n    setSelectedItem\n  } = useGlobalContext();\n  const [visible, setVisible] = useState(false);\n\n  // Define the paths where the button should be visible\n  const allowedPaths = [\"/report\", \"/owner\", \"/vehicle\", \"/inventory\", \"/tasktemplate\"];\n  const handleCreateClick = () => {\n    setSelectedItem(null);\n    navigate(location.pathname, {\n      state: {\n        createItem: true\n      }\n    });\n  };\n  useEffect(() => {\n    if (allowedPaths.includes(location.pathname)) {\n      setVisible(true);\n    } else {\n      setVisible(false);\n    }\n  }, [location.pathname]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `create-item-button-container${visible ? \" slide-in\" : \" slide-out\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      title: `Create new ${location.pathname}`,\n      type: \"button\",\n      className: \"create-item-button\",\n      onClick: () => openModal(modalComponent, item, itemType, true),\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        className: \"icon\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M12 22.4199C17.5228 22.4199 22 17.9428 22 12.4199C22 6.89707 17.5228 2.41992 12 2.41992C6.47715 2.41992 2 6.89707 2 12.4199C2 17.9428 6.47715 22.4199 12 22.4199Z\",\n          strokeWidth: \"1.5\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M12 8V16\",\n          strokeWidth: \"1.5\",\n          strokeLinecap: \"round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M8 12H16\",\n          strokeWidth: \"1.5\",\n          strokeLinecap: \"round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateItemButton, \"O6Z76IINM6yYQWp7W1RYv0hGjdo=\", false, function () {\n  return [useLocation, useNavigate, useGlobalContext];\n});\n_c = CreateItemButton;\nexport default CreateItemButton;\nvar _c;\n$RefreshReg$(_c, \"CreateItemButton\");","map":{"version":3,"names":["useState","useEffect","useLocation","useNavigate","useGlobalContext","jsxDEV","_jsxDEV","CreateItemButton","_s","location","navigate","modalComponent","openModal","setSelectedItem","visible","setVisible","allowedPaths","handleCreateClick","pathname","state","createItem","includes","className","children","title","type","onClick","item","itemType","xmlns","viewBox","fill","d","strokeWidth","strokeLinecap","strokeLinejoin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/components/buttons/CreateItemButton.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\n// Contexts\nimport { useGlobalContext } from \"../../contexts/GlobalContext\";\n// Styles\nimport \"../../styles/CreateItemButton.css\";\n\nconst CreateItemButton = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { modalComponent, openModal, setSelectedItem } = useGlobalContext();\n  const [visible, setVisible] = useState(false);\n\n  // Define the paths where the button should be visible\n  const allowedPaths = [\n    \"/report\",\n    \"/owner\",\n    \"/vehicle\",\n    \"/inventory\",\n    \"/tasktemplate\",\n  ];\n\n  const handleCreateClick = () => {\n    setSelectedItem(null);\n    navigate(location.pathname, { state: { createItem: true } });\n  };\n\n  useEffect(() => {\n    if (allowedPaths.includes(location.pathname)) {\n      setVisible(true);\n    } else {\n      setVisible(false);\n    }\n  }, [location.pathname]);\n\n  return (\n    <div\n      className={`create-item-button-container${\n        visible ? \" slide-in\" : \" slide-out\"\n      }`}\n    >\n      <button\n        title={`Create new ${location.pathname}`}\n        type=\"button\"\n        className=\"create-item-button\"\n        onClick={() => openModal(modalComponent, item, itemType, true)}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"currentColor\"\n          className=\"icon\"\n        >\n          <path\n            d=\"M12 22.4199C17.5228 22.4199 22 17.9428 22 12.4199C22 6.89707 17.5228 2.41992 12 2.41992C6.47715 2.41992 2 6.89707 2 12.4199C2 17.9428 6.47715 22.4199 12 22.4199Z\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n          <path d=\"M12 8V16\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n          <path d=\"M8 12H16\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default CreateItemButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}