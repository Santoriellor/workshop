{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/ReportContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportContext = /*#__PURE__*/createContext();\nexport const ReportProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    data: reports,\n    createItem: createReport,\n    updateItem: updateReport,\n    deleteItem: deleteReport,\n    loading,\n    error\n  } = useCRUD(\"reports\");\n  const {\n    data: tasks,\n    createItem: createTask,\n    updateItem: updateTask,\n    deleteItem: deleteTask\n  } = useCRUD(\"tasks\");\n  const {\n    data: parts,\n    createItem: createPart,\n    updateItem: updatePart,\n    deleteItem: deletePart\n  } = useCRUD(\"parts\");\n  const [selectedReport, setSelectedReport] = useState(null);\n\n  // Fetch tasks and parts when a report is selected\n  /* useEffect(() => {\n    if (!selectedReport) return;\n    useCRUD(`reports/${selectedReport.id}/tasks`).fetchData();\n    useCRUD(`reports/${selectedReport.id}/parts`).fetchData();\n  }, [selectedReport]); */\n\n  return /*#__PURE__*/_jsxDEV(ReportContext.Provider, {\n    value: {\n      reports,\n      selectedReport,\n      setSelectedReport,\n      createReport,\n      updateReport,\n      deleteReport,\n      tasks,\n      /* setTasks, */\n      createTask,\n      /* fetchTasksByReport, */\n      updateTask,\n      deleteTask,\n      parts,\n      /* setParts, */\n      createPart,\n      /* fetchPartsByReport, */\n      updatePart,\n      deletePart,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for accessing the ReportContext\n_s(ReportProvider, \"pNLqpseO3DAO+EO3hzz8zaCxXZI=\", false, function () {\n  return [useCRUD, useCRUD, useCRUD];\n});\n_c = ReportProvider;\nexport const useReportContext = () => {\n  _s2();\n  return useContext(ReportContext);\n};\n_s2(useReportContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ReportProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCRUD","jsxDEV","_jsxDEV","ReportContext","ReportProvider","children","_s","data","reports","createItem","createReport","updateItem","updateReport","deleteItem","deleteReport","loading","error","tasks","createTask","updateTask","deleteTask","parts","createPart","updatePart","deletePart","selectedReport","setSelectedReport","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useReportContext","_s2","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/ReportContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n\nconst ReportContext = createContext();\n\nexport const ReportProvider = ({ children }) => {\n  const {\n    data: reports,\n    createItem: createReport,\n    updateItem: updateReport,\n    deleteItem: deleteReport,\n    loading,\n    error,\n  } = useCRUD(\"reports\");\n\n  const {\n    data: tasks,\n    createItem: createTask,\n    updateItem: updateTask,\n    deleteItem: deleteTask,\n  } = useCRUD(\"tasks\");\n\n  const {\n    data: parts,\n    createItem: createPart,\n    updateItem: updatePart,\n    deleteItem: deletePart,\n  } = useCRUD(\"parts\");\n\n  const [selectedReport, setSelectedReport] = useState(null);\n\n  // Fetch tasks and parts when a report is selected\n  /* useEffect(() => {\n    if (!selectedReport) return;\n    useCRUD(`reports/${selectedReport.id}/tasks`).fetchData();\n    useCRUD(`reports/${selectedReport.id}/parts`).fetchData();\n  }, [selectedReport]); */\n\n  return (\n    <ReportContext.Provider\n      value={{\n        reports,\n        selectedReport,\n        setSelectedReport,\n        createReport,\n        updateReport,\n        deleteReport,\n        tasks,\n        /* setTasks, */\n        createTask,\n        /* fetchTasksByReport, */\n        updateTask,\n        deleteTask,\n        parts,\n        /* setParts, */\n        createPart,\n        /* fetchPartsByReport, */\n        updatePart,\n        deletePart,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </ReportContext.Provider>\n  );\n};\n\n// Custom hook for accessing the ReportContext\nexport const useReportContext = () => useContext(ReportContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E;AACA,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,gBAAGP,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMQ,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM;IACJC,IAAI,EAAEC,OAAO;IACbC,UAAU,EAAEC,YAAY;IACxBC,UAAU,EAAEC,YAAY;IACxBC,UAAU,EAAEC,YAAY;IACxBC,OAAO;IACPC;EACF,CAAC,GAAGhB,OAAO,CAAC,SAAS,CAAC;EAEtB,MAAM;IACJO,IAAI,EAAEU,KAAK;IACXR,UAAU,EAAES,UAAU;IACtBP,UAAU,EAAEQ,UAAU;IACtBN,UAAU,EAAEO;EACd,CAAC,GAAGpB,OAAO,CAAC,OAAO,CAAC;EAEpB,MAAM;IACJO,IAAI,EAAEc,KAAK;IACXZ,UAAU,EAAEa,UAAU;IACtBX,UAAU,EAAEY,UAAU;IACtBV,UAAU,EAAEW;EACd,CAAC,GAAGxB,OAAO,CAAC,OAAO,CAAC;EAEpB,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA;AACF;AACA;AACA;AACA;;EAEE,oBACEI,OAAA,CAACC,aAAa,CAACwB,QAAQ;IACrBC,KAAK,EAAE;MACLpB,OAAO;MACPiB,cAAc;MACdC,iBAAiB;MACjBhB,YAAY;MACZE,YAAY;MACZE,YAAY;MACZG,KAAK;MACL;MACAC,UAAU;MACV;MACAC,UAAU;MACVC,UAAU;MACVC,KAAK;MACL;MACAC,UAAU;MACV;MACAC,UAAU;MACVC,UAAU;MACVT,OAAO;MACPC;IACF,CAAE;IAAAX,QAAA,EAEDA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;;AAED;AAAA1B,EAAA,CA/DaF,cAAc;EAAA,QAQrBJ,OAAO,EAOPA,OAAO,EAOPA,OAAO;AAAA;AAAAiC,EAAA,GAtBA7B,cAAc;AAgE3B,OAAO,MAAM8B,gBAAgB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtC,UAAU,CAACM,aAAa,CAAC;AAAA;AAACgC,GAAA,CAAnDD,gBAAgB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}