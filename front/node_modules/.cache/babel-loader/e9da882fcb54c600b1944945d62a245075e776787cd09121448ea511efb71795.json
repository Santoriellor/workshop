{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/ReportContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n// Contexts\nimport { useGlobalContext } from \"../contexts/GlobalContext\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n// Utils\nimport { Toast } from \"../utils/sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportContext = /*#__PURE__*/createContext();\nexport const ReportProvider = ({\n  children\n}) => {\n  _s();\n  const location = useLocation();\n  const {\n    selectedItem\n  } = useGlobalContext();\n  const {\n    data: reports,\n    fetchData: fetchReports,\n    createItem: createReport,\n    updateItem: updateReport,\n    deleteItem: deleteReport,\n    loading: loadingReports,\n    error: errorReports\n  } = useCRUD(\"reports\");\n\n  // Create a report with success alert\n  const createReportWithAlert = async reportData => {\n    const newReport = await createReport(reportData);\n    if (newReport) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Report created successfully!\"\n      });\n    }\n    return newReport;\n  };\n\n  // Update a report with success alert\n  const updateReportWithAlert = async (reportId, updatedFields) => {\n    const updatedReport = await updateReport(reportId, updatedFields);\n    if (updatedReport) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Report updated successfully!\"\n      });\n    }\n    return updatedReport;\n  };\n\n  // Delete a report with success alert\n  const deleteReportWithAlert = async reportId => {\n    const success = await deleteReport(reportId);\n    if (success) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Report deleted successfully!\"\n      });\n    }\n    return success;\n  };\n  const {\n    data: tasks,\n    fetchData: fetchTasks,\n    createItem: createTask,\n    updateItem: updateTask,\n    deleteItem: deleteTask,\n    loading: loadingTasks,\n    error: errorTasks\n  } = useCRUD(\"tasks\", \"reports\", selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.id);\n  const {\n    data: parts,\n    fetchData: fetchParts,\n    createItem: createPart,\n    updateItem: updatePart,\n    deleteItem: deletePart,\n    loading: loadingParts,\n    error: errorParts\n  } = useCRUD(\"parts\", \"reports\", selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.id);\n  useEffect(() => {\n    fetchReports();\n  }, []);\n\n  // Automatically fetch data when the selectedItem changes\n  useEffect(() => {\n    if (location.pathname.includes(\"reports\")) {\n      fetchTasks();\n      fetchParts();\n    }\n  }, [selectedItem]);\n  return /*#__PURE__*/_jsxDEV(ReportContext.Provider, {\n    value: {\n      reports,\n      fetchReports,\n      loadingReports,\n      errorReports,\n      createReportWithAlert,\n      updateReportWithAlert,\n      deleteReportWithAlert,\n      tasks,\n      fetchTasks,\n      loadingTasks,\n      errorTasks,\n      createTask,\n      updateTask,\n      deleteTask,\n      parts,\n      fetchParts,\n      loadingParts,\n      errorParts,\n      createPart,\n      updatePart,\n      deletePart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for accessing the ReportContext\n_s(ReportProvider, \"BlKqvCQiGE5j/+c7IO60oZcy5po=\", false, function () {\n  return [useLocation, useGlobalContext, useCRUD, useCRUD, useCRUD];\n});\n_c = ReportProvider;\nexport const useReportContext = () => {\n  _s2();\n  return useContext(ReportContext);\n};\n_s2(useReportContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ReportProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useLocation","useGlobalContext","useCRUD","Toast","jsxDEV","_jsxDEV","ReportContext","ReportProvider","children","_s","location","selectedItem","data","reports","fetchData","fetchReports","createItem","createReport","updateItem","updateReport","deleteItem","deleteReport","loading","loadingReports","error","errorReports","createReportWithAlert","reportData","newReport","fire","icon","title","updateReportWithAlert","reportId","updatedFields","updatedReport","deleteReportWithAlert","success","tasks","fetchTasks","createTask","updateTask","deleteTask","loadingTasks","errorTasks","id","parts","fetchParts","createPart","updatePart","deletePart","loadingParts","errorParts","pathname","includes","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useReportContext","_s2","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/ReportContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\n// Contexts\nimport { useGlobalContext } from \"../contexts/GlobalContext\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n// Utils\nimport { Toast } from \"../utils/sweetalert\";\n\nconst ReportContext = createContext();\n\nexport const ReportProvider = ({ children }) => {\n  const location = useLocation();\n  const { selectedItem } = useGlobalContext();\n\n  const {\n    data: reports,\n    fetchData: fetchReports,\n    createItem: createReport,\n    updateItem: updateReport,\n    deleteItem: deleteReport,\n    loading: loadingReports,\n    error: errorReports,\n  } = useCRUD(\"reports\");\n\n  // Create a report with success alert\n  const createReportWithAlert = async (reportData) => {\n    const newReport = await createReport(reportData);\n    if (newReport) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Report created successfully!\",\n      });\n    }\n    return newReport;\n  };\n\n  // Update a report with success alert\n  const updateReportWithAlert = async (reportId, updatedFields) => {\n    const updatedReport = await updateReport(reportId, updatedFields);\n    if (updatedReport) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Report updated successfully!\",\n      });\n    }\n    return updatedReport;\n  };\n\n  // Delete a report with success alert\n  const deleteReportWithAlert = async (reportId) => {\n    const success = await deleteReport(reportId);\n    if (success) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Report deleted successfully!\",\n      });\n    }\n    return success;\n  };\n\n  const {\n    data: tasks,\n    fetchData: fetchTasks,\n    createItem: createTask,\n    updateItem: updateTask,\n    deleteItem: deleteTask,\n    loading: loadingTasks,\n    error: errorTasks,\n  } = useCRUD(\"tasks\", \"reports\", selectedItem?.id);\n\n  const {\n    data: parts,\n    fetchData: fetchParts,\n    createItem: createPart,\n    updateItem: updatePart,\n    deleteItem: deletePart,\n    loading: loadingParts,\n    error: errorParts,\n  } = useCRUD(\"parts\", \"reports\", selectedItem?.id);\n\n  useEffect(() => {\n    fetchReports();\n  }, []);\n\n  // Automatically fetch data when the selectedItem changes\n  useEffect(() => {\n    if (location.pathname.includes(\"reports\")) {\n      fetchTasks();\n      fetchParts();\n    }\n  }, [selectedItem]);\n\n  return (\n    <ReportContext.Provider\n      value={{\n        reports,\n        fetchReports,\n        loadingReports,\n        errorReports,\n        createReportWithAlert,\n        updateReportWithAlert,\n        deleteReportWithAlert,\n        tasks,\n        fetchTasks,\n        loadingTasks,\n        errorTasks,\n        createTask,\n        updateTask,\n        deleteTask,\n        parts,\n        fetchParts,\n        loadingParts,\n        errorParts,\n        createPart,\n        updatePart,\n        deletePart,\n      }}\n    >\n      {children}\n    </ReportContext.Provider>\n  );\n};\n\n// Custom hook for accessing the ReportContext\nexport const useReportContext = () => useContext(ReportContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}