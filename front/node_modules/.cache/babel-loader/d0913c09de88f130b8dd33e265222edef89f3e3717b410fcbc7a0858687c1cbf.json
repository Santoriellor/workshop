{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/InvoiceContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useEffect, useContext } from \"react\";\n\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n// Utils\nimport withSuccessAlert from \"../utils/successAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InvoiceContext = /*#__PURE__*/createContext();\nexport const InvoiceProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    data: invoices,\n    fetchData: fetchInvoices,\n    createItem: createInvoice,\n    updateItem: updateInvoice,\n    deleteItem: deleteInvoice,\n    loading: loadingInvoices,\n    error: errorInvoices\n  } = useCRUD(\"invoices\");\n\n  // Create a invoice with success alert\n  const createInvoiceWithAlert = withSuccessAlert(createInvoice, \"Invoice created successfully!\");\n  // Update a invoice with success alert\n  const updateInvoiceWithAlert = withSuccessAlert(updateInvoice, \"Invoice updated successfully!\");\n  // Delete a invoice with success alert\n  const deleteInvoiceWithAlert = withSuccessAlert(deleteInvoice, \"Invoice deleted successfully!\");\n\n  // Automatically fetch data on first load\n  useEffect(() => {\n    fetchInvoices({}, \"-issued_date\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(InvoiceContext.Provider, {\n    value: {\n      invoices,\n      fetchInvoices,\n      createInvoiceWithAlert,\n      updateInvoiceWithAlert,\n      deleteInvoiceWithAlert,\n      downloadInvoicePDF,\n      loadingInvoices,\n      errorInvoices\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for accessing the InvoiceContext\n_s(InvoiceProvider, \"C5DAwfU3NA6Jpir7Gh1PkJfwe2g=\", false, function () {\n  return [useCRUD];\n});\n_c = InvoiceProvider;\nexport const useInvoiceContext = () => {\n  _s2();\n  return useContext(InvoiceContext);\n};\n_s2(useInvoiceContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"InvoiceProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useContext","useCRUD","withSuccessAlert","jsxDEV","_jsxDEV","InvoiceContext","InvoiceProvider","children","_s","data","invoices","fetchData","fetchInvoices","createItem","createInvoice","updateItem","updateInvoice","deleteItem","deleteInvoice","loading","loadingInvoices","error","errorInvoices","createInvoiceWithAlert","updateInvoiceWithAlert","deleteInvoiceWithAlert","Provider","value","downloadInvoicePDF","fileName","_jsxFileName","lineNumber","columnNumber","_c","useInvoiceContext","_s2","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/InvoiceContext.js"],"sourcesContent":["import React, { createContext, useEffect, useContext } from \"react\";\n\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n// Utils\nimport withSuccessAlert from \"../utils/successAlert\";\n\nconst InvoiceContext = createContext();\n\nexport const InvoiceProvider = ({ children }) => {\n  const {\n    data: invoices,\n    fetchData: fetchInvoices,\n    createItem: createInvoice,\n    updateItem: updateInvoice,\n    deleteItem: deleteInvoice,\n    loading: loadingInvoices,\n    error: errorInvoices,\n  } = useCRUD(\"invoices\");\n\n  // Create a invoice with success alert\n  const createInvoiceWithAlert = withSuccessAlert(\n    createInvoice,\n    \"Invoice created successfully!\"\n  );\n  // Update a invoice with success alert\n  const updateInvoiceWithAlert = withSuccessAlert(\n    updateInvoice,\n    \"Invoice updated successfully!\"\n  );\n  // Delete a invoice with success alert\n  const deleteInvoiceWithAlert = withSuccessAlert(\n    deleteInvoice,\n    \"Invoice deleted successfully!\"\n  );\n\n  // Automatically fetch data on first load\n  useEffect(() => {\n    fetchInvoices({}, \"-issued_date\");\n  }, []);\n\n  return (\n    <InvoiceContext.Provider\n      value={{\n        invoices,\n        fetchInvoices,\n        createInvoiceWithAlert,\n        updateInvoiceWithAlert,\n        deleteInvoiceWithAlert,\n        downloadInvoicePDF,\n        loadingInvoices,\n        errorInvoices,\n      }}\n    >\n      {children}\n    </InvoiceContext.Provider>\n  );\n};\n\n// Custom hook for accessing the InvoiceContext\nexport const useInvoiceContext = () => useContext(InvoiceContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;;AAEnE;AACA,OAAOC,OAAO,MAAM,kBAAkB;AACtC;AACA,OAAOC,gBAAgB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,cAAc,gBAAGP,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMQ,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM;IACJC,IAAI,EAAEC,QAAQ;IACdC,SAAS,EAAEC,aAAa;IACxBC,UAAU,EAAEC,aAAa;IACzBC,UAAU,EAAEC,aAAa;IACzBC,UAAU,EAAEC,aAAa;IACzBC,OAAO,EAAEC,eAAe;IACxBC,KAAK,EAAEC;EACT,CAAC,GAAGrB,OAAO,CAAC,UAAU,CAAC;;EAEvB;EACA,MAAMsB,sBAAsB,GAAGrB,gBAAgB,CAC7CY,aAAa,EACb,+BACF,CAAC;EACD;EACA,MAAMU,sBAAsB,GAAGtB,gBAAgB,CAC7Cc,aAAa,EACb,+BACF,CAAC;EACD;EACA,MAAMS,sBAAsB,GAAGvB,gBAAgB,CAC7CgB,aAAa,EACb,+BACF,CAAC;;EAED;EACAnB,SAAS,CAAC,MAAM;IACda,aAAa,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA,CAACC,cAAc,CAACqB,QAAQ;IACtBC,KAAK,EAAE;MACLjB,QAAQ;MACRE,aAAa;MACbW,sBAAsB;MACtBC,sBAAsB;MACtBC,sBAAsB;MACtBG,kBAAkB;MAClBR,eAAe;MACfE;IACF,CAAE;IAAAf,QAAA,EAEDA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;;AAED;AAAAxB,EAAA,CAlDaF,eAAe;EAAA,QAStBL,OAAO;AAAA;AAAAgC,EAAA,GATA3B,eAAe;AAmD5B,OAAO,MAAM4B,iBAAiB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnC,UAAU,CAACK,cAAc,CAAC;AAAA;AAAC8B,GAAA,CAArDD,iBAAiB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}