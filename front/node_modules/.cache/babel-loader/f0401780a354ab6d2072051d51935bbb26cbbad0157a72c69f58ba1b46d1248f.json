{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/ClientContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:8000\";\nexport const ClientContext = /*#__PURE__*/createContext();\nexport const ClientProvider = ({\n  children\n}) => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const token = localStorage.getItem(\"access_token\");\n  if (!token) {\n    return null;\n  }\n\n  // Fetch clients from the server\n  const fetchClients = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/clients/`);\n      setClients(response.data);\n    } catch (error) {\n      console.error(\"Error fetching clients:\", error);\n    }\n  };\n\n  // Create a new client\n  const createClient = async clientData => {\n    try {\n      const response = await axios.post(`${BASE_URL}/api/clients/`, clientData);\n      setClients([...clients, response.data]);\n    } catch (error) {\n      console.error(\"Error creating client:\", error);\n    }\n  };\n\n  // Update a client\n  const updateClient = async (clientId, updatedData) => {\n    try {\n      const response = await axios.put(`${BASE_URL}/api/clients/${clientId}/`, updatedData);\n      setClients(clients.map(r => r.id === clientId ? response.data : r));\n    } catch (error) {\n      console.error(\"Error updating client:\", error);\n    }\n  };\n\n  // Delete a client\n  const deleteClient = async clientId => {\n    try {\n      await axios.delete(`${BASE_URL}/api/clients/${clientId}/`);\n      setClients(clients.filter(r => r.id !== clientId));\n    } catch (error) {\n      console.error(\"Error deleting client:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchClients(); // Fetch clients when the component mounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ClientContext.Provider, {\n    value: {\n      clients,\n      selectedClient,\n      setSelectedClient,\n      fetchClients,\n      createClient,\n      updateClient,\n      deleteClient\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientProvider, \"MfpEN57lLhpftExFFa/KwqZGklQ=\");\n_c = ClientProvider;\nvar _c;\n$RefreshReg$(_c, \"ClientProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","BASE_URL","ClientContext","ClientProvider","children","_s","clients","setClients","selectedClient","setSelectedClient","token","localStorage","getItem","fetchClients","response","get","data","error","console","createClient","clientData","post","updateClient","clientId","updatedData","put","map","r","id","deleteClient","delete","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/ClientContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst BASE_URL = \"http://localhost:8000\";\n\nexport const ClientContext = createContext();\n\nexport const ClientProvider = ({ children }) => {\n  const [clients, setClients] = useState([]);\n  const [selectedClient, setSelectedClient] = useState(null);\n\n  const token = localStorage.getItem(\"access_token\");\n  if (!token) {\n    return null;\n  }\n\n  // Fetch clients from the server\n  const fetchClients = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/clients/`);\n      setClients(response.data);\n    } catch (error) {\n      console.error(\"Error fetching clients:\", error);\n    }\n  };\n\n  // Create a new client\n  const createClient = async (clientData) => {\n    try {\n      const response = await axios.post(`${BASE_URL}/api/clients/`, clientData);\n      setClients([...clients, response.data]);\n    } catch (error) {\n      console.error(\"Error creating client:\", error);\n    }\n  };\n\n  // Update a client\n  const updateClient = async (clientId, updatedData) => {\n    try {\n      const response = await axios.put(\n        `${BASE_URL}/api/clients/${clientId}/`,\n        updatedData\n      );\n      setClients(clients.map((r) => (r.id === clientId ? response.data : r)));\n    } catch (error) {\n      console.error(\"Error updating client:\", error);\n    }\n  };\n\n  // Delete a client\n  const deleteClient = async (clientId) => {\n    try {\n      await axios.delete(`${BASE_URL}/api/clients/${clientId}/`);\n      setClients(clients.filter((r) => r.id !== clientId));\n    } catch (error) {\n      console.error(\"Error deleting client:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchClients(); // Fetch clients when the component mounts\n  }, []);\n\n  return (\n    <ClientContext.Provider\n      value={{\n        clients,\n        selectedClient,\n        setSelectedClient,\n        fetchClients,\n        createClient,\n        updateClient,\n        deleteClient,\n      }}\n    >\n      {children}\n    </ClientContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}