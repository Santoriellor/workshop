{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { useAxios } from \"../utils/useAxios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const axiosInstance = useAxios();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch all users from the backend\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.get(\"users/\");\n      setUsers(response.data);\n    } catch (err) {\n      console.error(\"Error fetching users:\", err);\n      setError(\"Failed to load users.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to get username by ID\n  const getUserNameById = userId => {\n    const user = users.find(user => user.id === userId);\n    return user ? user.username : \"Unknown\";\n  };\n\n  // Fetch users\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      users,\n      getUserNameById,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the UserContext\n_s(UserProvider, \"2JAF7i+4rd3L61Fh7+jxYUNP/Oc=\", false, function () {\n  return [useAxios];\n});\n_c = UserProvider;\nexport const useUserContext = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUserContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useAxios","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","axiosInstance","users","setUsers","loading","setLoading","error","setError","fetchUsers","response","get","data","err","console","getUserNameById","userId","user","find","id","username","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserContext","_s2","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { useAxios } from \"../utils/useAxios\";\n\nexport const UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const axiosInstance = useAxios();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch all users from the backend\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.get(\"users/\");\n      setUsers(response.data);\n    } catch (err) {\n      console.error(\"Error fetching users:\", err);\n      setError(\"Failed to load users.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to get username by ID\n  const getUserNameById = (userId) => {\n    const user = users.find((user) => user.id === userId);\n    return user ? user.username : \"Unknown\";\n  };\n\n  // Fetch users\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  return (\n    <UserContext.Provider\n      value={{\n        users,\n        getUserNameById,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\n// Custom hook to use the UserContext\nexport const useUserContext = () => useContext(UserContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAMC,aAAa,GAAGP,QAAQ,CAAC,CAAC;EAChC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMiB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMR,aAAa,CAACS,GAAG,CAAC,QAAQ,CAAC;MAClDP,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACP,KAAK,CAAC,uBAAuB,EAAEM,GAAG,CAAC;MAC3CL,QAAQ,CAAC,uBAAuB,CAAC;IACnC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMS,eAAe,GAAIC,MAAM,IAAK;IAClC,MAAMC,IAAI,GAAGd,KAAK,CAACe,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKH,MAAM,CAAC;IACrD,OAAOC,IAAI,GAAGA,IAAI,CAACG,QAAQ,GAAG,SAAS;EACzC,CAAC;;EAED;EACA3B,SAAS,CAAC,MAAM;IACdgB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAACC,WAAW,CAACuB,QAAQ;IACnBC,KAAK,EAAE;MACLnB,KAAK;MACLY,eAAe;MACfV,OAAO;MACPE;IACF,CAAE;IAAAP,QAAA,EAEDA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAzB,EAAA,CA7CaF,YAAY;EAAA,QACDJ,QAAQ;AAAA;AAAAgC,EAAA,GADnB5B,YAAY;AA8CzB,OAAO,MAAM6B,cAAc,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnC,UAAU,CAACI,WAAW,CAAC;AAAA;AAAC+B,GAAA,CAA/CD,cAAc;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}