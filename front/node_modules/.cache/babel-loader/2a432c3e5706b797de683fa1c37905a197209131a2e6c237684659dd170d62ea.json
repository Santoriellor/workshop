{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/ReportContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n// Utils\nimport { Toast } from \"../utils/sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportContext = /*#__PURE__*/createContext();\nexport const ReportProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedReport, setSelectedReport] = useState(null);\n  const {\n    data: reports,\n    createItem: createReport,\n    updateItem: updateReport,\n    deleteItem: deleteReport,\n    loading,\n    error\n  } = useCRUD(\"reports\");\n  const createReportWithAlert = async reportData => {\n    const newReport = await createReport(reportData);\n    if (newReport) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Report created successfully!\"\n      });\n    }\n    return newReport;\n  };\n\n  // Update a report with success alert\n  const updateReportWithAlert = async (reportId, updatedFields) => {\n    const updatedReport = await updateReport(reportId, updatedFields);\n    if (updatedReport) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Report updated successfully!\"\n      });\n    }\n    return updatedReport;\n  };\n\n  // Delete a report with success alert\n  const deleteReportWithAlert = async reportId => {\n    const success = await deleteReport(reportId);\n    if (success) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Report deleted successfully!\"\n      });\n    }\n    return success;\n  };\n  const {\n    data: tasks,\n    setData: setTasks,\n    createItem: createTask,\n    updateItem: updateTask,\n    deleteItem: deleteTask\n  } = useCRUD(\"tasks\", \"reports\", selectedReport === null || selectedReport === void 0 ? void 0 : selectedReport.id);\n  const {\n    data: parts,\n    setData: setParts,\n    createItem: createPart,\n    updateItem: updatePart,\n    deleteItem: deletePart\n  } = useCRUD(\"parts\", \"reports\", selectedReport === null || selectedReport === void 0 ? void 0 : selectedReport.id);\n  return /*#__PURE__*/_jsxDEV(ReportContext.Provider, {\n    value: {\n      reports,\n      selectedReport,\n      setSelectedReport,\n      createReportWithAlert,\n      updateReportWithAlert,\n      deleteReportWithAlert,\n      tasks,\n      createTask,\n      updateTask,\n      deleteTask,\n      parts,\n      createPart,\n      updatePart,\n      deletePart,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for accessing the ReportContext\n_s(ReportProvider, \"CNYi4D6/02mOfNhL7YM1YHeBGh0=\", false, function () {\n  return [useCRUD, useCRUD, useCRUD];\n});\n_c = ReportProvider;\nexport const useReportContext = () => {\n  _s2();\n  return useContext(ReportContext);\n};\n_s2(useReportContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ReportProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCRUD","Toast","jsxDEV","_jsxDEV","ReportContext","ReportProvider","children","_s","selectedReport","setSelectedReport","data","reports","createItem","createReport","updateItem","updateReport","deleteItem","deleteReport","loading","error","createReportWithAlert","reportData","newReport","fire","icon","title","updateReportWithAlert","reportId","updatedFields","updatedReport","deleteReportWithAlert","success","tasks","setData","setTasks","createTask","updateTask","deleteTask","id","parts","setParts","createPart","updatePart","deletePart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useReportContext","_s2","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/ReportContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n// Utils\nimport { Toast } from \"../utils/sweetalert\";\n\nconst ReportContext = createContext();\n\nexport const ReportProvider = ({ children }) => {\n  const [selectedReport, setSelectedReport] = useState(null);\n\n  const {\n    data: reports,\n    createItem: createReport,\n    updateItem: updateReport,\n    deleteItem: deleteReport,\n    loading,\n    error,\n  } = useCRUD(\"reports\");\n\n  const createReportWithAlert = async (reportData) => {\n    const newReport = await createReport(reportData);\n    if (newReport) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Report created successfully!\",\n      });\n    }\n    return newReport;\n  };\n\n  // Update a report with success alert\n  const updateReportWithAlert = async (reportId, updatedFields) => {\n    const updatedReport = await updateReport(reportId, updatedFields);\n    if (updatedReport) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Report updated successfully!\",\n      });\n    }\n    return updatedReport;\n  };\n\n  // Delete a report with success alert\n  const deleteReportWithAlert = async (reportId) => {\n    const success = await deleteReport(reportId);\n    if (success) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Report deleted successfully!\",\n      });\n    }\n    return success;\n  };\n\n  const {\n    data: tasks,\n    setData: setTasks,\n    createItem: createTask,\n    updateItem: updateTask,\n    deleteItem: deleteTask,\n  } = useCRUD(\"tasks\", \"reports\", selectedReport?.id);\n\n  const {\n    data: parts,\n    setData: setParts,\n    createItem: createPart,\n    updateItem: updatePart,\n    deleteItem: deletePart,\n  } = useCRUD(\"parts\", \"reports\", selectedReport?.id);\n\n  return (\n    <ReportContext.Provider\n      value={{\n        reports,\n        selectedReport,\n        setSelectedReport,\n        createReportWithAlert,\n        updateReportWithAlert,\n        deleteReportWithAlert,\n        tasks,\n        createTask,\n        updateTask,\n        deleteTask,\n        parts,\n        createPart,\n        updatePart,\n        deletePart,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </ReportContext.Provider>\n  );\n};\n\n// Custom hook for accessing the ReportContext\nexport const useReportContext = () => useContext(ReportContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}