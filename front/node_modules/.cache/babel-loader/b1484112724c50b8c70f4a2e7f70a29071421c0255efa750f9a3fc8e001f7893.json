{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/ClientContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { useAxios } from \"../utils/useAxios\";\nimport { useAuth } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientContext = /*#__PURE__*/createContext();\nexport const ClientProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const axiosInstance = useAxios();\n  const [clients, setClients] = useState([]);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Centralized error handling\n  const handleError = err => {\n    console.error(err.message || \"An error occurred\");\n    setError(err.message || \"An error occurred\");\n  };\n\n  // Fetch all clients\n  const fetchClients = async () => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.get(\"clients/\");\n      setClients(response.data);\n    } catch (err) {\n      handleError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new client\n  const createClient = async clientData => {\n    try {\n      const response = await axiosInstance.post(\"clients/\", clientData);\n      setClients(prevClients => [...prevClients, response.data]);\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Update a client\n  const updateClient = async (clientId, updatedFields) => {\n    try {\n      const response = await axiosInstance.put(`clients/${clientId}/`, updatedFields);\n      setClients(prevClients => prevClients.map(client => client.id === clientId ? response.data : client));\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Delete a client\n  const deleteClient = async clientId => {\n    try {\n      await axiosInstance.delete(`clients/${clientId}/`);\n      setClients(prevClients => prevClients.filter(client => client.id !== clientId));\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Fetch clients when user logs in or changes\n  useEffect(() => {\n    if (user) fetchClients();else setClients([]); // Clear clients if no user\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(ClientContext.Provider, {\n    value: {\n      clients,\n      selectedClient,\n      setSelectedClient,\n      createClient,\n      updateClient,\n      deleteClient,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientProvider, \"rmLz9hUPaBYjRnRQ2bbiZrdRWnw=\", false, function () {\n  return [useAuth, useAxios];\n});\n_c = ClientProvider;\nvar _c;\n$RefreshReg$(_c, \"ClientProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useAxios","useAuth","jsxDEV","_jsxDEV","ClientContext","ClientProvider","children","_s","user","axiosInstance","clients","setClients","selectedClient","setSelectedClient","loading","setLoading","error","setError","handleError","err","console","message","fetchClients","response","get","data","createClient","clientData","post","prevClients","updateClient","clientId","updatedFields","put","map","client","id","deleteClient","delete","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/ClientContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { useAxios } from \"../utils/useAxios\";\nimport { useAuth } from \"./AuthContext\";\n\nconst ClientContext = createContext();\n\nexport const ClientProvider = ({ children }) => {\n  const { user } = useAuth();\n  const axiosInstance = useAxios();\n  const [clients, setClients] = useState([]);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Centralized error handling\n  const handleError = (err) => {\n    console.error(err.message || \"An error occurred\");\n    setError(err.message || \"An error occurred\");\n  };\n\n  // Fetch all clients\n  const fetchClients = async () => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.get(\"clients/\");\n      setClients(response.data);\n    } catch (err) {\n      handleError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new client\n  const createClient = async (clientData) => {\n    try {\n      const response = await axiosInstance.post(\"clients/\", clientData);\n      setClients((prevClients) => [...prevClients, response.data]);\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Update a client\n  const updateClient = async (clientId, updatedFields) => {\n    try {\n      const response = await axiosInstance.put(\n        `clients/${clientId}/`,\n        updatedFields\n      );\n      setClients((prevClients) =>\n        prevClients.map((client) =>\n          client.id === clientId ? response.data : client\n        )\n      );\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Delete a client\n  const deleteClient = async (clientId) => {\n    try {\n      await axiosInstance.delete(`clients/${clientId}/`);\n      setClients((prevClients) =>\n        prevClients.filter((client) => client.id !== clientId)\n      );\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Fetch clients when user logs in or changes\n  useEffect(() => {\n    if (user) fetchClients();\n    else setClients([]); // Clear clients if no user\n  }, [user]);\n\n  return (\n    <ClientContext.Provider\n      value={{\n        clients,\n        selectedClient,\n        setSelectedClient,\n        createClient,\n        updateClient,\n        deleteClient,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </ClientContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}