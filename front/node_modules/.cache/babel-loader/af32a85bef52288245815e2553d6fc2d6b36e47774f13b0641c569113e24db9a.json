{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst BASE_URL = \"http://localhost:8000\";\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"access_token\"));\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Helper function to save tokens\n  const saveTokens = (access, refresh) => {\n    localStorage.setItem(\"access_token\", access);\n    localStorage.setItem(\"refresh_token\", refresh);\n    setAccessToken(access);\n  };\n\n  // Login\n  const login = async credentials => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${BASE_URL}/api/token/`, credentials);\n      saveTokens(response.data.access, response.data.refresh);\n      await fetchUserProfile();\n    } catch (err) {\n      setError(\"Invalid credentials\");\n      console.error(\"Error during login:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout\n  const logout = useCallback(() => {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"refresh_token\");\n    setAccessToken(null);\n    setUser(null);\n    window.location.href = \"/login\"; // Redirect to login page\n  }, []);\n\n  // Fetch user profile\n  const fetchUserProfile = async () => {\n    if (!accessToken) return;\n    try {\n      const response = await axios.get(`${BASE_URL}/api/users/me/`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      setUser(response.data);\n    } catch (err) {\n      console.error(\"Error fetching user profile:\", err);\n      setUser(null);\n    }\n  };\n\n  // Refresh token\n  const refreshToken = useCallback(async () => {\n    try {\n      const refresh = localStorage.getItem(\"refresh_token\");\n      if (!refresh) {\n        logout();\n        return;\n      }\n      const response = await axios.post(`${BASE_URL}/api/token/refresh/`, {\n        refresh\n      });\n      saveTokens(response.data.access, refresh);\n    } catch (err) {\n      console.error(\"Error refreshing token:\", err);\n      logout();\n    }\n  }, []);\n\n  // Auto-fetch user profile on token change\n  useEffect(() => {\n    if (accessToken) {\n      fetchUserProfile();\n    }\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      refreshToken,\n      isAuthenticated: !!accessToken,\n      error,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"87k2ZWEOfWoJuvD9chQLrwrQWmU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","AuthContext","BASE_URL","AuthProvider","children","_s","user","setUser","accessToken","setAccessToken","localStorage","getItem","loading","setLoading","error","setError","saveTokens","access","refresh","setItem","login","credentials","response","post","data","fetchUserProfile","err","console","logout","removeItem","window","location","href","get","headers","Authorization","refreshToken","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\nexport const AuthContext = createContext();\n\nconst BASE_URL = \"http://localhost:8000\";\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [accessToken, setAccessToken] = useState(\n    localStorage.getItem(\"access_token\")\n  );\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Helper function to save tokens\n  const saveTokens = (access, refresh) => {\n    localStorage.setItem(\"access_token\", access);\n    localStorage.setItem(\"refresh_token\", refresh);\n    setAccessToken(access);\n  };\n\n  // Login\n  const login = async (credentials) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${BASE_URL}/api/token/`, credentials);\n      saveTokens(response.data.access, response.data.refresh);\n      await fetchUserProfile();\n    } catch (err) {\n      setError(\"Invalid credentials\");\n      console.error(\"Error during login:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout\n  const logout = useCallback(() => {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"refresh_token\");\n    setAccessToken(null);\n    setUser(null);\n    window.location.href = \"/login\"; // Redirect to login page\n  }, []);\n\n  // Fetch user profile\n  const fetchUserProfile = async () => {\n    if (!accessToken) return;\n    try {\n      const response = await axios.get(`${BASE_URL}/api/users/me/`, {\n        headers: { Authorization: `Bearer ${accessToken}` },\n      });\n      setUser(response.data);\n    } catch (err) {\n      console.error(\"Error fetching user profile:\", err);\n      setUser(null);\n    }\n  };\n\n  // Refresh token\n  const refreshToken = useCallback(async () => {\n    try {\n      const refresh = localStorage.getItem(\"refresh_token\");\n      if (!refresh) {\n        logout();\n        return;\n      }\n      const response = await axios.post(`${BASE_URL}/api/token/refresh/`, {\n        refresh,\n      });\n      saveTokens(response.data.access, refresh);\n    } catch (err) {\n      console.error(\"Error refreshing token:\", err);\n      logout();\n    }\n  }, []);\n\n  // Auto-fetch user profile on token change\n  useEffect(() => {\n    if (accessToken) {\n      fetchUserProfile();\n    }\n  }, [accessToken]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        login,\n        logout,\n        refreshToken,\n        isAuthenticated: !!accessToken,\n        error,\n        loading,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}