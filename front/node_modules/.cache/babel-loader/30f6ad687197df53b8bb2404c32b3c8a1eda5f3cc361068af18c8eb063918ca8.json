{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { useAxios } from \"../utils/useAxios\";\nimport { useAuth } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    authenticatedUser\n  } = useAuth();\n  const axiosInstance = useAxios();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch all users from the backend\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.get(\"users/\");\n      setUsers(response.data);\n    } catch (err) {\n      console.error(\"Error fetching users:\", err);\n      setError(\"Failed to load users.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to get username by ID\n  const getUserNameById = userId => {\n    const user = users.find(user => user.id === userId);\n    return user ? user.username : \"Unknown\";\n  };\n\n  // Fetch users when user logs in or changes\n  useEffect(() => {\n    if (authenticatedUser) fetchUsers();else setUsers([]);\n  }, [authenticatedUser]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      users,\n      getUserNameById,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the UserContext\n_s(UserProvider, \"TvKLA3LMoTcpJbsq79Ov5sosVNc=\", false, function () {\n  return [useAuth, useAxios];\n});\n_c = UserProvider;\nexport const useUserContext = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUserContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useAxios","useAuth","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","authenticatedUser","axiosInstance","users","setUsers","loading","setLoading","error","setError","fetchUsers","response","get","data","err","console","getUserNameById","userId","user","find","id","username","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserContext","_s2","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { useAxios } from \"../utils/useAxios\";\nimport { useAuth } from \"./AuthContext\";\n\nexport const UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const { authenticatedUser } = useAuth();\n  const axiosInstance = useAxios();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch all users from the backend\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.get(\"users/\");\n      setUsers(response.data);\n    } catch (err) {\n      console.error(\"Error fetching users:\", err);\n      setError(\"Failed to load users.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to get username by ID\n  const getUserNameById = (userId) => {\n    const user = users.find((user) => user.id === userId);\n    return user ? user.username : \"Unknown\";\n  };\n\n  // Fetch users when user logs in or changes\n  useEffect(() => {\n    if (authenticatedUser) fetchUsers();\n    else setUsers([]);\n  }, [authenticatedUser]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        users,\n        getUserNameById,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\n// Custom hook to use the UserContext\nexport const useUserContext = () => useContext(UserContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM;IAAEC;EAAkB,CAAC,GAAGP,OAAO,CAAC,CAAC;EACvC,MAAMQ,aAAa,GAAGT,QAAQ,CAAC,CAAC;EAChC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMmB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMR,aAAa,CAACS,GAAG,CAAC,QAAQ,CAAC;MAClDP,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACP,KAAK,CAAC,uBAAuB,EAAEM,GAAG,CAAC;MAC3CL,QAAQ,CAAC,uBAAuB,CAAC;IACnC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMS,eAAe,GAAIC,MAAM,IAAK;IAClC,MAAMC,IAAI,GAAGd,KAAK,CAACe,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKH,MAAM,CAAC;IACrD,OAAOC,IAAI,GAAGA,IAAI,CAACG,QAAQ,GAAG,SAAS;EACzC,CAAC;;EAED;EACA7B,SAAS,CAAC,MAAM;IACd,IAAIU,iBAAiB,EAAEQ,UAAU,CAAC,CAAC,CAAC,KAC/BL,QAAQ,CAAC,EAAE,CAAC;EACnB,CAAC,EAAE,CAACH,iBAAiB,CAAC,CAAC;EAEvB,oBACEL,OAAA,CAACC,WAAW,CAACwB,QAAQ;IACnBC,KAAK,EAAE;MACLnB,KAAK;MACLY,eAAe;MACfV,OAAO;MACPE;IACF,CAAE;IAAAR,QAAA,EAEDA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAA1B,EAAA,CA/CaF,YAAY;EAAA,QACOJ,OAAO,EACfD,QAAQ;AAAA;AAAAkC,EAAA,GAFnB7B,YAAY;AAgDzB,OAAO,MAAM8B,cAAc,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrC,UAAU,CAACK,WAAW,CAAC;AAAA;AAACgC,GAAA,CAA/CD,cAAc;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}