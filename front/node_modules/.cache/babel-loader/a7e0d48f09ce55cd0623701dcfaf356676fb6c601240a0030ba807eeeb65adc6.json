{"ast":null,"code":"import axios from \"axios\";\nimport { getAuthContext } from \"../contexts/AuthContext\";\n\n// Base instance for axios\nconst authAxios = axios.create({\n  baseURL: \"http://localhost:8000\" // Set the base URL for your API\n});\n\n// Request Interceptor\nauthAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"access_token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  // Handle request errors here\n  return Promise.reject(error);\n});\n\n// Response Interceptor\nauthAxios.interceptors.response.use(response => response,\n// Pass successful responses\nasync error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true; // Prevent infinite retries\n\n    try {\n      const {\n        refreshToken\n      } = getAuthContext();\n      // Attempt to refresh the token\n      await refreshToken();\n      const newToken = localStorage.getItem(\"access_token\");\n      if (newToken) {\n        originalRequest.headers.Authorization = `Bearer ${newToken}`;\n        return authAxios(originalRequest); // Retry the failed request\n      }\n    } catch (err) {\n      const {\n        logout\n      } = getAuthContext();\n      // If token refresh fails, log out the user\n      logout();\n    }\n  }\n  return Promise.reject(error); // Reject the promise if the error is not recoverable\n});\nexport default authAxios;","map":{"version":3,"names":["axios","getAuthContext","authAxios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","newToken","err","logout"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/utils/axios.js"],"sourcesContent":["import axios from \"axios\";\nimport { getAuthContext } from \"../contexts/AuthContext\";\n\n// Base instance for axios\nconst authAxios = axios.create({\n  baseURL: \"http://localhost:8000\", // Set the base URL for your API\n});\n\n// Request Interceptor\nauthAxios.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"access_token\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    // Handle request errors here\n    return Promise.reject(error);\n  }\n);\n\n// Response Interceptor\nauthAxios.interceptors.response.use(\n  (response) => response, // Pass successful responses\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true; // Prevent infinite retries\n\n      try {\n        const { refreshToken } = getAuthContext();\n        // Attempt to refresh the token\n        await refreshToken();\n        const newToken = localStorage.getItem(\"access_token\");\n\n        if (newToken) {\n          originalRequest.headers.Authorization = `Bearer ${newToken}`;\n          return authAxios(originalRequest); // Retry the failed request\n        }\n      } catch (err) {\n        const { logout } = getAuthContext();\n        // If token refresh fails, log out the user\n        logout();\n      }\n    }\n\n    return Promise.reject(error); // Reject the promise if the error is not recoverable\n  }\n);\n\nexport default authAxios;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,yBAAyB;;AAExD;AACA,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAE,uBAAuB,CAAE;AACpC,CAAC,CAAC;;AAEF;AACAF,SAAS,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAM,KAAK,IAAK;EACT;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,SAAS,CAACG,YAAY,CAACY,QAAQ,CAACV,GAAG,CAChCU,QAAQ,IAAKA,QAAQ;AAAE;AACxB,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACf,MAAMC,eAAe,GAAGL,KAAK,CAACN,MAAM;EAEpC,IAAI,EAAAU,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI,CAAC,CAAC;;IAE/B,IAAI;MACF,MAAM;QAAEC;MAAa,CAAC,GAAGrB,cAAc,CAAC,CAAC;MACzC;MACA,MAAMqB,YAAY,CAAC,CAAC;MACpB,MAAMC,QAAQ,GAAGb,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAErD,IAAIY,QAAQ,EAAE;QACZJ,eAAe,CAACP,OAAO,CAACC,aAAa,GAAG,UAAUU,QAAQ,EAAE;QAC5D,OAAOrB,SAAS,CAACiB,eAAe,CAAC,CAAC,CAAC;MACrC;IACF,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZ,MAAM;QAAEC;MAAO,CAAC,GAAGxB,cAAc,CAAC,CAAC;MACnC;MACAwB,MAAM,CAAC,CAAC;IACV;EACF;EAEA,OAAOV,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC;AAChC,CACF,CAAC;AAED,eAAeZ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}