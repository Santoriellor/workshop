{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAxios } from \"./useAxios\";\nconst useCRUD = (apiEndpoint, parentResource = null, itemId = null) => {\n  _s();\n  const axiosInstance = useAxios();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Construct URL dynamically\n  const baseURL = parentResource && itemId ? `${parentResource}/${itemId}/${apiEndpoint}/` : `${apiEndpoint}/`;\n\n  // Centralized error handling\n  const handleError = err => {\n    var _err$response;\n    console.error(`Error in ${apiEndpoint}:`, err.message, ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || \"\");\n    setError(err.message || \"An error occurred\");\n  };\n\n  // Fetch all items\n  const fetchData = async (filters = {}, sort = \"\") => {\n    if (parentResource && !itemId) {\n      setData([]); // Clear state when no itemId is selected\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // Build query params\n      const params = new URLSearchParams();\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value) params.append(key, value); // Only add non-empty filters\n      });\n      if (sort) params.append(\"ordering\", sort);\n      const response = await axiosInstance.get(`${baseURL}?${params.toString()}`);\n      setData(response.data);\n      return response.data;\n    } catch (err) {\n      handleError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create an item\n  const createItem = async itemData => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.post(`${apiEndpoint}/`, itemData);\n      setData(prev => [...prev, response.data]);\n      return response.data;\n    } catch (err) {\n      handleError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update an item\n  const updateItem = async (itemId, updatedFields) => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.patch(`${apiEndpoint}/${itemId}/`, updatedFields);\n      setData(prev => prev.map(item => item.id === itemId ? response.data : item));\n      return response.data;\n    } catch (err) {\n      handleError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete an item\n  const deleteItem = async itemId => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.delete(`${apiEndpoint}/${itemId}/`);\n      setData(prev => prev.filter(item => item.id !== itemId));\n      return response;\n    } catch (err) {\n      handleError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    data,\n    setData,\n    fetchData,\n    createItem,\n    updateItem,\n    deleteItem,\n    loading,\n    error\n  };\n};\n_s(useCRUD, \"BCE3pP20ZhhtnJ99QGUc8+F1Fts=\", false, function () {\n  return [useAxios];\n});\nexport default useCRUD;","map":{"version":3,"names":["useState","useAxios","useCRUD","apiEndpoint","parentResource","itemId","_s","axiosInstance","data","setData","loading","setLoading","error","setError","baseURL","handleError","err","_err$response","console","message","response","fetchData","filters","sort","params","URLSearchParams","Object","entries","forEach","key","value","append","get","toString","createItem","itemData","post","prev","updateItem","updatedFields","patch","map","item","id","deleteItem","delete","filter"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/hooks/useCRUD.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useAxios } from \"./useAxios\";\n\nconst useCRUD = (apiEndpoint, parentResource = null, itemId = null) => {\n  const axiosInstance = useAxios();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Construct URL dynamically\n  const baseURL =\n    parentResource && itemId\n      ? `${parentResource}/${itemId}/${apiEndpoint}/`\n      : `${apiEndpoint}/`;\n\n  // Centralized error handling\n  const handleError = (err) => {\n    console.error(\n      `Error in ${apiEndpoint}:`,\n      err.message,\n      err.response?.data || \"\"\n    );\n    setError(err.message || \"An error occurred\");\n  };\n\n  // Fetch all items\n  const fetchData = async (filters = {}, sort = \"\") => {\n    if (parentResource && !itemId) {\n      setData([]); // Clear state when no itemId is selected\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // Build query params\n      const params = new URLSearchParams();\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value) params.append(key, value); // Only add non-empty filters\n      });\n      if (sort) params.append(\"ordering\", sort);\n\n      const response = await axiosInstance.get(\n        `${baseURL}?${params.toString()}`\n      );\n      setData(response.data);\n      return response.data;\n    } catch (err) {\n      handleError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create an item\n  const createItem = async (itemData) => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.post(`${apiEndpoint}/`, itemData);\n      setData((prev) => [...prev, response.data]);\n      return response.data;\n    } catch (err) {\n      handleError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update an item\n  const updateItem = async (itemId, updatedFields) => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.patch(\n        `${apiEndpoint}/${itemId}/`,\n        updatedFields\n      );\n      setData((prev) =>\n        prev.map((item) => (item.id === itemId ? response.data : item))\n      );\n      return response.data;\n    } catch (err) {\n      handleError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete an item\n  const deleteItem = async (itemId) => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.delete(`${apiEndpoint}/${itemId}/`);\n      setData((prev) => prev.filter((item) => item.id !== itemId));\n      return response;\n    } catch (err) {\n      handleError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return {\n    data,\n    setData,\n    fetchData,\n    createItem,\n    updateItem,\n    deleteItem,\n    loading,\n    error,\n  };\n};\n\nexport default useCRUD;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}