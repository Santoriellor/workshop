{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/OwnerContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/UseCRUD\";\n// Contexts\nimport { useVehicleContext } from \"./VehicleContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OwnerContext = /*#__PURE__*/createContext();\nexport const OwnerProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    data: owners,\n    createItem,\n    updateItem,\n    deleteItem,\n    loading,\n    error\n  } = useCRUD(\"owners\");\n  const {\n    vehicles\n  } = useVehicleContext() || {};\n  const [selectedOwner, setSelectedOwner] = useState(null);\n  const getOwnerNameByVehicleId = vehicleId => {\n    const vehicle = vehicles.find(v => v.id === vehicleId);\n    if (!vehicle) return \"Unknown\";\n    const owner = owners.find(o => o.id === vehicle.owner);\n    return owner ? owner.full_name : \"Unknown\";\n  };\n\n  /* // Fetch owners when user logs in or changes\n  useEffect(() => {\n    if (authenticatedUser && localStorage.getItem(\"token\")) fetchOwners();\n    else setOwners([]); // Clear owners if no user\n  }, [authenticatedUser]); */\n\n  return /*#__PURE__*/_jsxDEV(OwnerContext.Provider, {\n    value: {\n      owners,\n      selectedOwner,\n      setSelectedOwner,\n      createOwner: createItem,\n      updateOwner: updateItem,\n      deleteOwner: deleteItem,\n      getOwnerNameByVehicleId,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for accessing the OwnerContext\n_s(OwnerProvider, \"IUewIjtzYvY+pdBAY3CLlFPRnNQ=\", false, function () {\n  return [useCRUD, useVehicleContext];\n});\n_c = OwnerProvider;\nexport const useOwnerContext = () => {\n  _s2();\n  return useContext(OwnerContext);\n};\n_s2(useOwnerContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"OwnerProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useCRUD","useVehicleContext","jsxDEV","_jsxDEV","OwnerContext","OwnerProvider","children","_s","data","owners","createItem","updateItem","deleteItem","loading","error","vehicles","selectedOwner","setSelectedOwner","getOwnerNameByVehicleId","vehicleId","vehicle","find","v","id","owner","o","full_name","Provider","value","createOwner","updateOwner","deleteOwner","fileName","_jsxFileName","lineNumber","columnNumber","_c","useOwnerContext","_s2","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/OwnerContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/UseCRUD\";\n// Contexts\nimport { useVehicleContext } from \"./VehicleContext\";\n\nconst OwnerContext = createContext();\n\nexport const OwnerProvider = ({ children }) => {\n  const {\n    data: owners,\n    createItem,\n    updateItem,\n    deleteItem,\n    loading,\n    error,\n  } = useCRUD(\"owners\");\n  const { vehicles } = useVehicleContext() || {};\n  const [selectedOwner, setSelectedOwner] = useState(null);\n\n  const getOwnerNameByVehicleId = (vehicleId) => {\n    const vehicle = vehicles.find((v) => v.id === vehicleId);\n    if (!vehicle) return \"Unknown\";\n\n    const owner = owners.find((o) => o.id === vehicle.owner);\n    return owner ? owner.full_name : \"Unknown\";\n  };\n\n  /* // Fetch owners when user logs in or changes\n  useEffect(() => {\n    if (authenticatedUser && localStorage.getItem(\"token\")) fetchOwners();\n    else setOwners([]); // Clear owners if no user\n  }, [authenticatedUser]); */\n\n  return (\n    <OwnerContext.Provider\n      value={{\n        owners,\n        selectedOwner,\n        setSelectedOwner,\n        createOwner: createItem,\n        updateOwner: updateItem,\n        deleteOwner: deleteItem,\n        getOwnerNameByVehicleId,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </OwnerContext.Provider>\n  );\n};\n\n// Custom hook for accessing the OwnerContext\nexport const useOwnerContext = () => useContext(OwnerContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE;AACA,OAAOC,OAAO,MAAM,kBAAkB;AACtC;AACA,SAASC,iBAAiB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMQ,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM;IACJC,IAAI,EAAEC,MAAM;IACZC,UAAU;IACVC,UAAU;IACVC,UAAU;IACVC,OAAO;IACPC;EACF,CAAC,GAAGd,OAAO,CAAC,QAAQ,CAAC;EACrB,MAAM;IAAEe;EAAS,CAAC,GAAGd,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC;EAC9C,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMoB,uBAAuB,GAAIC,SAAS,IAAK;IAC7C,MAAMC,OAAO,GAAGL,QAAQ,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,SAAS,CAAC;IACxD,IAAI,CAACC,OAAO,EAAE,OAAO,SAAS;IAE9B,MAAMI,KAAK,GAAGf,MAAM,CAACY,IAAI,CAAEI,CAAC,IAAKA,CAAC,CAACF,EAAE,KAAKH,OAAO,CAACI,KAAK,CAAC;IACxD,OAAOA,KAAK,GAAGA,KAAK,CAACE,SAAS,GAAG,SAAS;EAC5C,CAAC;;EAED;AACF;AACA;AACA;AACA;;EAEE,oBACEvB,OAAA,CAACC,YAAY,CAACuB,QAAQ;IACpBC,KAAK,EAAE;MACLnB,MAAM;MACNO,aAAa;MACbC,gBAAgB;MAChBY,WAAW,EAAEnB,UAAU;MACvBoB,WAAW,EAAEnB,UAAU;MACvBoB,WAAW,EAAEnB,UAAU;MACvBM,uBAAuB;MACvBL,OAAO;MACPC;IACF,CAAE;IAAAR,QAAA,EAEDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAA5B,EAAA,CA7CaF,aAAa;EAAA,QAQpBL,OAAO,EACUC,iBAAiB;AAAA;AAAAmC,EAAA,GAT3B/B,aAAa;AA8C1B,OAAO,MAAMgC,eAAe,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvC,UAAU,CAACK,YAAY,CAAC;AAAA;AAACkC,GAAA,CAAjDD,eAAe;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}