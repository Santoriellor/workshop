{"ast":null,"code":"import axios from \"axios\";\nconst axiosInstance = axios.create({\n  baseURL: \"http://localhost:8000/api/\" // Your backend base URL\n});\n\n// Add an interceptor to include the Authorization header\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"access_token\"); // Retrieve the token from localStorage\n  if (token) {\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/utils/axios.js"],"sourcesContent":["import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"http://localhost:8000/api/\", // Your backend base URL\n});\n\n// Add an interceptor to include the Authorization header\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"access_token\"); // Retrieve the token from localStorage\n    if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default axiosInstance;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE,4BAA4B,CAAE;AACzC,CAAC,CAAC;;AAEF;AACAF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;EACpD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,eAAeX,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}