{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/VehicleContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n// Utils\nimport { Toast } from \"../utils/sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VehicleContext = /*#__PURE__*/createContext();\nexport const VehicleProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedVehicle, setSelectedVehicle] = useState(null);\n  const {\n    data: vehicles,\n    createItem: createVehicle,\n    updateItem: updateVehicle,\n    deleteItem: deleteVehicle,\n    loading,\n    error\n  } = useCRUD(\"vehicles\");\n\n  // Create a vehicle with success alert\n  const createVehicleWithAlert = async vehicleData => {\n    const newVehicle = await createVehicle(vehicleData);\n    if (newVehicle) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Vehicle created successfully!\"\n      });\n    }\n    return newVehicle;\n  };\n\n  // Update a vehicle with success alert\n  const updateVehicleWithAlert = async (vehicleId, updatedFields) => {\n    const updatedVehicle = await updateVehicle(vehicleId, updatedFields);\n    if (updatedVehicle) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Vehicle updated successfully!\"\n      });\n    }\n    return updatedVehicle;\n  };\n\n  // Delete a vehicle with success alert\n  const deleteVehicleWithAlert = async vehicleId => {\n    const success = await deleteVehicle(vehicleId);\n    if (success) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Vehicle deleted successfully!\"\n      });\n    }\n    return success;\n  };\n\n  // Function to get the vehicle description by vehicle ID\n  const getVehicleInfoByVehicleId = vehicleId => {\n    const vehicle = vehicles.find(vehicle => vehicle.id === vehicleId);\n    return vehicle ? vehicle.__str__ : \"Unknown\";\n  };\n  return /*#__PURE__*/_jsxDEV(VehicleContext.Provider, {\n    value: {\n      vehicles,\n      selectedVehicle,\n      setSelectedVehicle,\n      createVehicleWithAlert,\n      updateVehicleWithAlert,\n      deleteVehicleWithAlert,\n      getVehicleInfoByVehicleId,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for accessing the VehicleContext\n_s(VehicleProvider, \"bMS8m7CYxWX4pQ/0ckhXy7r0sZM=\", false, function () {\n  return [useCRUD];\n});\n_c = VehicleProvider;\nexport const useVehicleContext = () => {\n  _s2();\n  return useContext(VehicleContext);\n};\n_s2(useVehicleContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"VehicleProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCRUD","Toast","jsxDEV","_jsxDEV","VehicleContext","VehicleProvider","children","_s","selectedVehicle","setSelectedVehicle","data","vehicles","createItem","createVehicle","updateItem","updateVehicle","deleteItem","deleteVehicle","loading","error","createVehicleWithAlert","vehicleData","newVehicle","fire","icon","title","updateVehicleWithAlert","vehicleId","updatedFields","updatedVehicle","deleteVehicleWithAlert","success","getVehicleInfoByVehicleId","vehicle","find","id","__str__","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useVehicleContext","_s2","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/VehicleContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n// Utils\nimport { Toast } from \"../utils/sweetalert\";\n\nconst VehicleContext = createContext();\n\nexport const VehicleProvider = ({ children }) => {\n  const [selectedVehicle, setSelectedVehicle] = useState(null);\n\n  const {\n    data: vehicles,\n    createItem: createVehicle,\n    updateItem: updateVehicle,\n    deleteItem: deleteVehicle,\n    loading,\n    error,\n  } = useCRUD(\"vehicles\");\n\n  // Create a vehicle with success alert\n  const createVehicleWithAlert = async (vehicleData) => {\n    const newVehicle = await createVehicle(vehicleData);\n    if (newVehicle) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Vehicle created successfully!\",\n      });\n    }\n    return newVehicle;\n  };\n\n  // Update a vehicle with success alert\n  const updateVehicleWithAlert = async (vehicleId, updatedFields) => {\n    const updatedVehicle = await updateVehicle(vehicleId, updatedFields);\n    if (updatedVehicle) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Vehicle updated successfully!\",\n      });\n    }\n    return updatedVehicle;\n  };\n\n  // Delete a vehicle with success alert\n  const deleteVehicleWithAlert = async (vehicleId) => {\n    const success = await deleteVehicle(vehicleId);\n    if (success) {\n      Toast.fire({\n        icon: \"success\",\n        title: \"Vehicle deleted successfully!\",\n      });\n    }\n    return success;\n  };\n\n  // Function to get the vehicle description by vehicle ID\n  const getVehicleInfoByVehicleId = (vehicleId) => {\n    const vehicle = vehicles.find((vehicle) => vehicle.id === vehicleId);\n    return vehicle ? vehicle.__str__ : \"Unknown\";\n  };\n\n  return (\n    <VehicleContext.Provider\n      value={{\n        vehicles,\n        selectedVehicle,\n        setSelectedVehicle,\n        createVehicleWithAlert,\n        updateVehicleWithAlert,\n        deleteVehicleWithAlert,\n        getVehicleInfoByVehicleId,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </VehicleContext.Provider>\n  );\n};\n\n// Custom hook for accessing the VehicleContext\nexport const useVehicleContext = () => useContext(VehicleContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE;AACA,OAAOC,OAAO,MAAM,kBAAkB;AACtC;AACA,SAASC,KAAK,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,gBAAGP,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMQ,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAM;IACJW,IAAI,EAAEC,QAAQ;IACdC,UAAU,EAAEC,aAAa;IACzBC,UAAU,EAAEC,aAAa;IACzBC,UAAU,EAAEC,aAAa;IACzBC,OAAO;IACPC;EACF,CAAC,GAAGnB,OAAO,CAAC,UAAU,CAAC;;EAEvB;EACA,MAAMoB,sBAAsB,GAAG,MAAOC,WAAW,IAAK;IACpD,MAAMC,UAAU,GAAG,MAAMT,aAAa,CAACQ,WAAW,CAAC;IACnD,IAAIC,UAAU,EAAE;MACdrB,KAAK,CAACsB,IAAI,CAAC;QACTC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;IACA,OAAOH,UAAU;EACnB,CAAC;;EAED;EACA,MAAMI,sBAAsB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,aAAa,KAAK;IACjE,MAAMC,cAAc,GAAG,MAAMd,aAAa,CAACY,SAAS,EAAEC,aAAa,CAAC;IACpE,IAAIC,cAAc,EAAE;MAClB5B,KAAK,CAACsB,IAAI,CAAC;QACTC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;IACA,OAAOI,cAAc;EACvB,CAAC;;EAED;EACA,MAAMC,sBAAsB,GAAG,MAAOH,SAAS,IAAK;IAClD,MAAMI,OAAO,GAAG,MAAMd,aAAa,CAACU,SAAS,CAAC;IAC9C,IAAII,OAAO,EAAE;MACX9B,KAAK,CAACsB,IAAI,CAAC;QACTC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;IACA,OAAOM,OAAO;EAChB,CAAC;;EAED;EACA,MAAMC,yBAAyB,GAAIL,SAAS,IAAK;IAC/C,MAAMM,OAAO,GAAGtB,QAAQ,CAACuB,IAAI,CAAED,OAAO,IAAKA,OAAO,CAACE,EAAE,KAAKR,SAAS,CAAC;IACpE,OAAOM,OAAO,GAAGA,OAAO,CAACG,OAAO,GAAG,SAAS;EAC9C,CAAC;EAED,oBACEjC,OAAA,CAACC,cAAc,CAACiC,QAAQ;IACtBC,KAAK,EAAE;MACL3B,QAAQ;MACRH,eAAe;MACfC,kBAAkB;MAClBW,sBAAsB;MACtBM,sBAAsB;MACtBI,sBAAsB;MACtBE,yBAAyB;MACzBd,OAAO;MACPC;IACF,CAAE;IAAAb,QAAA,EAEDA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;;AAED;AAAAnC,EAAA,CAzEaF,eAAe;EAAA,QAUtBL,OAAO;AAAA;AAAA2C,EAAA,GAVAtC,eAAe;AA0E5B,OAAO,MAAMuC,iBAAiB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM/C,UAAU,CAACM,cAAc,CAAC;AAAA;AAACyC,GAAA,CAArDD,iBAAiB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}