{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/ReportContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:8000\";\nexport const ReportContext = /*#__PURE__*/createContext();\nexport const ReportProvider = ({\n  children\n}) => {\n  _s();\n  const [reports, setReports] = useState([]);\n  const [selectedReport, setSelectedReport] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Helper function to get headers with token\n  const getHeaders = () => {\n    const token = localStorage.getItem(\"access_token\");\n    if (!token) {\n      setError(\"User is not authenticated\");\n      return null;\n    }\n    return {\n      Authorization: `Bearer ${token}`\n    };\n  };\n\n  // Fetch reports from the server\n  const fetchReports = async () => {\n    const headers = getHeaders();\n    if (!headers) return;\n    try {\n      setLoading(true);\n      const response = await axios.get(`${BASE_URL}/api/reports/`, {\n        headers\n      });\n      setReports(response.data);\n    } catch (err) {\n      console.error(\"Error fetching reports:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new report\n  const createReport = async reportData => {\n    const headers = getHeaders();\n    if (!headers) return;\n    try {\n      const response = await axios.post(`${BASE_URL}/api/reports/`, reportData, {\n        headers\n      });\n      setReports([...reports, response.data]);\n    } catch (err) {\n      console.error(\"Error creating report:\", err);\n      setError(err.message);\n    }\n  };\n\n  // Update a report\n  const updateReport = async (reportId, updatedFields) => {\n    const headers = getHeaders();\n    if (!headers) return;\n    try {\n      const response = await axios.put(`${BASE_URL}/api/reports/${reportId}/`, updatedFields, {\n        headers\n      });\n      setReports(prevReports => prevReports.map(report => report.id === reportId ? response.data : report));\n    } catch (err) {\n      console.error(\"Error updating report:\", err);\n      setError(err.message);\n    }\n  };\n\n  // Delete a report\n  const deleteReport = async reportId => {\n    const headers = getHeaders();\n    if (!headers) return;\n    try {\n      await axios.delete(`${BASE_URL}/api/reports/${reportId}/`, {\n        headers\n      });\n      setReports(prevReports => prevReports.filter(report => report.id !== reportId));\n    } catch (err) {\n      console.error(\"Error deleting report:\", err);\n      setError(err.message);\n    }\n  };\n  useEffect(() => {\n    fetchReports();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ReportContext.Provider, {\n    value: {\n      reports,\n      selectedReport,\n      setSelectedReport,\n      fetchReports,\n      createReport,\n      updateReport,\n      deleteReport,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportProvider, \"0KTMPwnDvCEpmk7wbxm7FbMXYoU=\");\n_c = ReportProvider;\nvar _c;\n$RefreshReg$(_c, \"ReportProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","BASE_URL","ReportContext","ReportProvider","children","_s","reports","setReports","selectedReport","setSelectedReport","loading","setLoading","error","setError","getHeaders","token","localStorage","getItem","Authorization","fetchReports","headers","response","get","data","err","console","message","createReport","reportData","post","updateReport","reportId","updatedFields","put","prevReports","map","report","id","deleteReport","delete","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/ReportContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst BASE_URL = \"http://localhost:8000\";\n\nexport const ReportContext = createContext();\n\nexport const ReportProvider = ({ children }) => {\n  const [reports, setReports] = useState([]);\n  const [selectedReport, setSelectedReport] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Helper function to get headers with token\n  const getHeaders = () => {\n    const token = localStorage.getItem(\"access_token\");\n    if (!token) {\n      setError(\"User is not authenticated\");\n      return null;\n    }\n    return {\n      Authorization: `Bearer ${token}`,\n    };\n  };\n\n  // Fetch reports from the server\n  const fetchReports = async () => {\n    const headers = getHeaders();\n    if (!headers) return;\n\n    try {\n      setLoading(true);\n      const response = await axios.get(`${BASE_URL}/api/reports/`, { headers });\n      setReports(response.data);\n    } catch (err) {\n      console.error(\"Error fetching reports:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new report\n  const createReport = async (reportData) => {\n    const headers = getHeaders();\n    if (!headers) return;\n\n    try {\n      const response = await axios.post(\n        `${BASE_URL}/api/reports/`,\n        reportData,\n        { headers }\n      );\n      setReports([...reports, response.data]);\n    } catch (err) {\n      console.error(\"Error creating report:\", err);\n      setError(err.message);\n    }\n  };\n\n  // Update a report\n  const updateReport = async (reportId, updatedFields) => {\n    const headers = getHeaders();\n    if (!headers) return;\n\n    try {\n      const response = await axios.put(\n        `${BASE_URL}/api/reports/${reportId}/`,\n        updatedFields,\n        { headers }\n      );\n      setReports((prevReports) =>\n        prevReports.map((report) =>\n          report.id === reportId ? response.data : report\n        )\n      );\n    } catch (err) {\n      console.error(\"Error updating report:\", err);\n      setError(err.message);\n    }\n  };\n\n  // Delete a report\n  const deleteReport = async (reportId) => {\n    const headers = getHeaders();\n    if (!headers) return;\n\n    try {\n      await axios.delete(`${BASE_URL}/api/reports/${reportId}/`, { headers });\n      setReports((prevReports) =>\n        prevReports.filter((report) => report.id !== reportId)\n      );\n    } catch (err) {\n      console.error(\"Error deleting report:\", err);\n      setError(err.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchReports();\n  }, []);\n\n  return (\n    <ReportContext.Provider\n      value={{\n        reports,\n        selectedReport,\n        setSelectedReport,\n        fetchReports,\n        createReport,\n        updateReport,\n        deleteReport,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </ReportContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}