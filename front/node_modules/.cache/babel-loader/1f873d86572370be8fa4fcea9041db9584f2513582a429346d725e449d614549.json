{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/InventoryContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n// Utils\nimport { Toast } from \"../utils/sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryContext = /*#__PURE__*/createContext();\nexport const InventoryProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedTaskTemplate, setSelectedTaskTemplate] = useState(null);\n  const [selectedInventoryPart, setSelectedInventoryPart] = useState(null);\n  const {\n    data: taskTemplate,\n    fetchData: fetchTaskTemplate,\n    createItem: createTaskTemplate,\n    updateItem: updateTaskTemplate,\n    deleteItem: deleteTaskTemplate,\n    loading,\n    error\n  } = useCRUD(\"task-templates\");\n  const {\n    data: inventory,\n    fetchData: fetchInventory,\n    createItem: createInventoryPart,\n    updateItem: updateInventoryPart,\n    deleteItem: deleteInventoryPart\n    /* loading,\n    error, */\n  } = useCRUD(\"inventory\");\n\n  // Automatically fetch data on first load\n  useEffect(() => {\n    fetchTaskTemplate();\n    fetchInventory();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(InventoryContext.Provider, {\n    value: {\n      inventory,\n      selectedInventoryPart,\n      setSelectedInventoryPart,\n      createInventoryPart,\n      updateInventoryPart,\n      deleteInventoryPart,\n      taskTemplate,\n      selectedTaskTemplate,\n      setSelectedTaskTemplate,\n      createTaskTemplate,\n      updateTaskTemplate,\n      deleteTaskTemplate,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for accessing the InventoryContext\n_s(InventoryProvider, \"h47qRosIhIU+3KqxvPZa4FdboFk=\", false, function () {\n  return [useCRUD, useCRUD];\n});\n_c = InventoryProvider;\nexport const useInventoryContext = () => {\n  _s2();\n  return useContext(InventoryContext);\n};\n_s2(useInventoryContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"InventoryProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCRUD","Toast","jsxDEV","_jsxDEV","InventoryContext","InventoryProvider","children","_s","selectedTaskTemplate","setSelectedTaskTemplate","selectedInventoryPart","setSelectedInventoryPart","data","taskTemplate","fetchData","fetchTaskTemplate","createItem","createTaskTemplate","updateItem","updateTaskTemplate","deleteItem","deleteTaskTemplate","loading","error","inventory","fetchInventory","createInventoryPart","updateInventoryPart","deleteInventoryPart","useEffect","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useInventoryContext","_s2","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/InventoryContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n// Hooks\nimport useCRUD from \"../hooks/useCRUD\";\n// Utils\nimport { Toast } from \"../utils/sweetalert\";\n\nconst InventoryContext = createContext();\n\nexport const InventoryProvider = ({ children }) => {\n  const [selectedTaskTemplate, setSelectedTaskTemplate] = useState(null);\n  const [selectedInventoryPart, setSelectedInventoryPart] = useState(null);\n\n  const {\n    data: taskTemplate,\n    fetchData: fetchTaskTemplate,\n    createItem: createTaskTemplate,\n    updateItem: updateTaskTemplate,\n    deleteItem: deleteTaskTemplate,\n    loading,\n    error,\n  } = useCRUD(\"task-templates\");\n\n  const {\n    data: inventory,\n    fetchData: fetchInventory,\n    createItem: createInventoryPart,\n    updateItem: updateInventoryPart,\n    deleteItem: deleteInventoryPart,\n    /* loading,\n    error, */\n  } = useCRUD(\"inventory\");\n\n  // Automatically fetch data on first load\n  useEffect(() => {\n    fetchTaskTemplate();\n    fetchInventory();\n  }, []);\n\n  return (\n    <InventoryContext.Provider\n      value={{\n        inventory,\n        selectedInventoryPart,\n        setSelectedInventoryPart,\n        createInventoryPart,\n        updateInventoryPart,\n        deleteInventoryPart,\n        taskTemplate,\n        selectedTaskTemplate,\n        setSelectedTaskTemplate,\n        createTaskTemplate,\n        updateTaskTemplate,\n        deleteTaskTemplate,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </InventoryContext.Provider>\n  );\n};\n\n// Custom hook for accessing the InventoryContext\nexport const useInventoryContext = () => useContext(InventoryContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE;AACA,OAAOC,OAAO,MAAM,kBAAkB;AACtC;AACA,SAASC,KAAK,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,gBAAgB,gBAAGP,aAAa,CAAC,CAAC;AAExC,OAAO,MAAMQ,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAACW,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExE,MAAM;IACJa,IAAI,EAAEC,YAAY;IAClBC,SAAS,EAAEC,iBAAiB;IAC5BC,UAAU,EAAEC,kBAAkB;IAC9BC,UAAU,EAAEC,kBAAkB;IAC9BC,UAAU,EAAEC,kBAAkB;IAC9BC,OAAO;IACPC;EACF,CAAC,GAAGvB,OAAO,CAAC,gBAAgB,CAAC;EAE7B,MAAM;IACJY,IAAI,EAAEY,SAAS;IACfV,SAAS,EAAEW,cAAc;IACzBT,UAAU,EAAEU,mBAAmB;IAC/BR,UAAU,EAAES,mBAAmB;IAC/BP,UAAU,EAAEQ;IACZ;AACJ;EACE,CAAC,GAAG5B,OAAO,CAAC,WAAW,CAAC;;EAExB;EACA6B,SAAS,CAAC,MAAM;IACdd,iBAAiB,CAAC,CAAC;IACnBU,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA,CAACC,gBAAgB,CAAC0B,QAAQ;IACxBC,KAAK,EAAE;MACLP,SAAS;MACTd,qBAAqB;MACrBC,wBAAwB;MACxBe,mBAAmB;MACnBC,mBAAmB;MACnBC,mBAAmB;MACnBf,YAAY;MACZL,oBAAoB;MACpBC,uBAAuB;MACvBQ,kBAAkB;MAClBE,kBAAkB;MAClBE,kBAAkB;MAClBC,OAAO;MACPC;IACF,CAAE;IAAAjB,QAAA,EAEDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;;AAED;AAAA5B,EAAA,CAtDaF,iBAAiB;EAAA,QAYxBL,OAAO,EAUPA,OAAO;AAAA;AAAAoC,EAAA,GAtBA/B,iBAAiB;AAuD9B,OAAO,MAAMgC,mBAAmB,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxC,UAAU,CAACM,gBAAgB,CAAC;AAAA;AAACkC,GAAA,CAAzDD,mBAAmB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}