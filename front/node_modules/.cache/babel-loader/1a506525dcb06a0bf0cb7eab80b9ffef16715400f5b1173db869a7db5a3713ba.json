{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/contexts/ReportContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { useAxios } from \"../utils/useAxios\";\nimport { useAuth } from \"./AuthContext\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportContext = /*#__PURE__*/createContext();\nexport const ReportProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const axiosInstance = useAxios();\n  const [reports, setReports] = useState([]);\n  const [selectedReport, setSelectedReport] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Centralized error handling\n  const handleError = err => {\n    console.error(err.message || \"An error occurred\");\n    setError(err.message || \"An error occurred\");\n  };\n\n  // Fetch all reports\n  const fetchReports = async () => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.get(\"reports/\");\n      setReports(response.data);\n    } catch (err) {\n      handleError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new report\n  const createReport = async reportData => {\n    try {\n      console.log(\"Sending report data:\", reportData);\n      const response = await axiosInstance.post(\"reports/\", reportData);\n      setReports(prevReports => [...prevReports, response.data]);\n      // Success notification\n      Swal.fire({\n        icon: \"success\",\n        title: \"Success\",\n        text: \"Report created successfully!\",\n        timer: 2000 // Auto-close after 2 seconds\n      });\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Update a report\n  const updateReport = async (reportId, updatedFields) => {\n    try {\n      const response = await axiosInstance.put(`reports/${reportId}/`, updatedFields);\n      setReports(prevReports => prevReports.map(report => report.id === reportId ? response.data : report));\n      // Success notification\n      Swal.fire({\n        icon: \"success\",\n        title: \"Updated\",\n        text: \"Report updated successfully!\",\n        timer: 2000\n      });\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Delete a report\n  const deleteReport = async reportId => {\n    try {\n      await axiosInstance.delete(`reports/${reportId}/`);\n      setReports(prevReports => prevReports.filter(report => report.id !== reportId));\n      // Success notification\n      Swal.fire({\n        icon: \"success\",\n        title: \"Deleted\",\n        text: \"Report deleted successfully!\",\n        timer: 2000\n      });\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Load reports when user logs in or changes\n  useEffect(() => {\n    if (user) fetchReports();else setReports([]); // Clear reports if no user\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(ReportContext.Provider, {\n    value: {\n      reports,\n      selectedReport,\n      setSelectedReport,\n      createReport,\n      updateReport,\n      deleteReport,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for accessing the ReportContext\n_s(ReportProvider, \"SkYmJQ2gTVlCf7clN+z30hOwuhw=\", false, function () {\n  return [useAuth, useAxios];\n});\n_c = ReportProvider;\nexport const useReportContext = () => {\n  _s2();\n  return useContext(ReportContext);\n};\n_s2(useReportContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ReportProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useAxios","useAuth","Swal","jsxDEV","_jsxDEV","ReportContext","ReportProvider","children","_s","user","axiosInstance","reports","setReports","selectedReport","setSelectedReport","loading","setLoading","error","setError","handleError","err","console","message","fetchReports","response","get","data","createReport","reportData","log","post","prevReports","fire","icon","title","text","timer","updateReport","reportId","updatedFields","put","map","report","id","deleteReport","delete","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useReportContext","_s2","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/contexts/ReportContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { useAxios } from \"../utils/useAxios\";\nimport { useAuth } from \"./AuthContext\";\nimport Swal from \"sweetalert2\";\n\nconst ReportContext = createContext();\n\nexport const ReportProvider = ({ children }) => {\n  const { user } = useAuth();\n  const axiosInstance = useAxios();\n  const [reports, setReports] = useState([]);\n  const [selectedReport, setSelectedReport] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Centralized error handling\n  const handleError = (err) => {\n    console.error(err.message || \"An error occurred\");\n    setError(err.message || \"An error occurred\");\n  };\n\n  // Fetch all reports\n  const fetchReports = async () => {\n    try {\n      setLoading(true);\n      const response = await axiosInstance.get(\"reports/\");\n      setReports(response.data);\n    } catch (err) {\n      handleError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Create a new report\n  const createReport = async (reportData) => {\n    try {\n      console.log(\"Sending report data:\", reportData);\n\n      const response = await axiosInstance.post(\"reports/\", reportData);\n      setReports((prevReports) => [...prevReports, response.data]);\n      // Success notification\n      Swal.fire({\n        icon: \"success\",\n        title: \"Success\",\n        text: \"Report created successfully!\",\n        timer: 2000, // Auto-close after 2 seconds\n      });\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Update a report\n  const updateReport = async (reportId, updatedFields) => {\n    try {\n      const response = await axiosInstance.put(\n        `reports/${reportId}/`,\n        updatedFields\n      );\n      setReports((prevReports) =>\n        prevReports.map((report) =>\n          report.id === reportId ? response.data : report\n        )\n      );\n      // Success notification\n      Swal.fire({\n        icon: \"success\",\n        title: \"Updated\",\n        text: \"Report updated successfully!\",\n        timer: 2000,\n      });\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Delete a report\n  const deleteReport = async (reportId) => {\n    try {\n      await axiosInstance.delete(`reports/${reportId}/`);\n      setReports((prevReports) =>\n        prevReports.filter((report) => report.id !== reportId)\n      );\n      // Success notification\n      Swal.fire({\n        icon: \"success\",\n        title: \"Deleted\",\n        text: \"Report deleted successfully!\",\n        timer: 2000,\n      });\n    } catch (err) {\n      handleError(err);\n    }\n  };\n\n  // Load reports when user logs in or changes\n  useEffect(() => {\n    if (user) fetchReports();\n    else setReports([]); // Clear reports if no user\n  }, [user]);\n\n  return (\n    <ReportContext.Provider\n      value={{\n        reports,\n        selectedReport,\n        setSelectedReport,\n        createReport,\n        updateReport,\n        deleteReport,\n        loading,\n        error,\n      }}\n    >\n      {children}\n    </ReportContext.Provider>\n  );\n};\n\n// Custom hook for accessing the ReportContext\nexport const useReportContext = () => useContext(ReportContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}