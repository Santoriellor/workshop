{"ast":null,"code":"import { Toast } from \"../utils/sweetalert\";\nconst withSuccessAlert = (fn, successMessage, customMessage = null) => {\n  return async (...args) => {\n    try {\n      const result = await fn(...args);\n\n      // Check if the result contains a 'status' field, and if it's 'exported'\n      if (result.status === \"exported\") {\n        Toast.fire(\"Success\", customMessage, \"success\");\n      } else {\n        Toast.fire(\"Success\", successMessage, \"success\");\n      }\n      return result;\n    } catch (error) {\n      console.error(\"Error:\", error);\n      Toast.fire(\"Error\", \"Something went wrong.\", \"error\");\n    }\n  };\n};\nexport default withSuccessAlert;","map":{"version":3,"names":["Toast","withSuccessAlert","fn","successMessage","customMessage","args","result","status","fire","error","console"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/utils/successAlert.js"],"sourcesContent":["import { Toast } from \"../utils/sweetalert\";\n\nconst withSuccessAlert = (fn, successMessage, customMessage = null) => {\n  return async (...args) => {\n    try {\n      const result = await fn(...args);\n\n      // Check if the result contains a 'status' field, and if it's 'exported'\n      if (result.status === \"exported\") {\n        Toast.fire(\"Success\", customMessage, \"success\");\n      } else {\n        Toast.fire(\"Success\", successMessage, \"success\");\n      }\n\n      return result;\n    } catch (error) {\n      console.error(\"Error:\", error);\n      Toast.fire(\"Error\", \"Something went wrong.\", \"error\");\n    }\n  };\n};\n\nexport default withSuccessAlert;\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,qBAAqB;AAE3C,MAAMC,gBAAgB,GAAGA,CAACC,EAAE,EAAEC,cAAc,EAAEC,aAAa,GAAG,IAAI,KAAK;EACrE,OAAO,OAAO,GAAGC,IAAI,KAAK;IACxB,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMJ,EAAE,CAAC,GAAGG,IAAI,CAAC;;MAEhC;MACA,IAAIC,MAAM,CAACC,MAAM,KAAK,UAAU,EAAE;QAChCP,KAAK,CAACQ,IAAI,CAAC,SAAS,EAAEJ,aAAa,EAAE,SAAS,CAAC;MACjD,CAAC,MAAM;QACLJ,KAAK,CAACQ,IAAI,CAAC,SAAS,EAAEL,cAAc,EAAE,SAAS,CAAC;MAClD;MAEA,OAAOG,MAAM;IACf,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BT,KAAK,CAACQ,IAAI,CAAC,OAAO,EAAE,uBAAuB,EAAE,OAAO,CAAC;IACvD;EACF,CAAC;AACH,CAAC;AAED,eAAeP,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}