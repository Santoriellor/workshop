{"ast":null,"code":"var _jsxFileName = \"/home/santo/Desktop/Dev/workshop/front/src/pages/Reports.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { ReportContext } from \"../contexts/ReportContext\";\nimport { ClientContext } from \"../contexts/ClientContext\";\nimport FilterBar from \"../components/FilterBar\";\nimport \"../styles/Reports.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reports = () => {\n  _s();\n  const {\n    reports\n  } = useContext(ReportContext);\n  const {\n    clients\n  } = useContext(ClientContext);\n  const [filters, setFilters] = useState({\n    title: \"\",\n    created_date: \"\",\n    client: \"\"\n  });\n  const handleFilterChange = (name, value) => {\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  const filteredReports = reports.filter(report => {\n    return (filters.title === \"\" || report.title.toLowerCase().includes(filters.title.toLowerCase())) && (filters.created_date === \"\" || report.created_date.includes(filters.created_date)) && (filters.client === \"\" || report.client.toString() === filters.client);\n  });\n\n  // Function to get the user name by ID\n  const getClientNameById = clientId => {\n    const client = clients.find(client => client.id === clientId);\n    return client ? client.name : \"Unknown\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reports-section\",\n    children: [/*#__PURE__*/_jsxDEV(FilterBar, {\n      filterOptions: [{\n        name: \"title\",\n        label: \"Title\",\n        value: filters.title,\n        placeholder: \"Filter by title\"\n      }, {\n        name: \"created_date\",\n        label: \"Created Date\",\n        value: filters.created_date,\n        type: \"select\"\n      }, {\n        name: \"client\",\n        label: \"Client\",\n        value: filters.client,\n        type: \"select\"\n      }],\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reports-list\",\n      children: [filteredReports.map(report => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: report.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Created Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), \" \", report.created_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Client:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), \" \", getClientNameById(report.client)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, report.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)), filteredReports.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No reports match your filters.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"tUdjd0gOMyuVWNSzBaMbT2kI5rQ=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useContext","useState","ReportContext","ClientContext","FilterBar","jsxDEV","_jsxDEV","Reports","_s","reports","clients","filters","setFilters","title","created_date","client","handleFilterChange","name","value","filteredReports","filter","report","toLowerCase","includes","toString","getClientNameById","clientId","find","id","className","children","filterOptions","label","placeholder","type","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","map","length","_c","$RefreshReg$"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/pages/Reports.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { ReportContext } from \"../contexts/ReportContext\";\nimport { ClientContext } from \"../contexts/ClientContext\";\nimport FilterBar from \"../components/FilterBar\";\nimport \"../styles/Reports.css\";\n\nconst Reports = () => {\n  const { reports } = useContext(ReportContext);\n  const { clients } = useContext(ClientContext);\n  const [filters, setFilters] = useState({\n    title: \"\",\n    created_date: \"\",\n    client: \"\",\n  });\n\n  const handleFilterChange = (name, value) => {\n    setFilters({ ...filters, [name]: value });\n  };\n\n  const filteredReports = reports.filter((report) => {\n    return (\n      (filters.title === \"\" ||\n        report.title.toLowerCase().includes(filters.title.toLowerCase())) &&\n      (filters.created_date === \"\" ||\n        report.created_date.includes(filters.created_date)) &&\n      (filters.client === \"\" || report.client.toString() === filters.client)\n    );\n  });\n\n  // Function to get the user name by ID\n  const getClientNameById = (clientId) => {\n    const client = clients.find((client) => client.id === clientId);\n    return client ? client.name : \"Unknown\";\n  };\n\n  return (\n    <div className=\"reports-section\">\n      {/* Filter Bar */}\n      <FilterBar\n        filterOptions={[\n          {\n            name: \"title\",\n            label: \"Title\",\n            value: filters.title,\n            placeholder: \"Filter by title\",\n          },\n          {\n            name: \"created_date\",\n            label: \"Created Date\",\n            value: filters.created_date,\n            type: \"select\",\n          },\n          {\n            name: \"client\",\n            label: \"Client\",\n            value: filters.client,\n            type: \"select\",\n          },\n        ]}\n        onFilterChange={handleFilterChange}\n      />\n\n      {/* Filtered Reports */}\n      <div className=\"reports-list\">\n        {filteredReports.map((report) => (\n          <div key={report.id} className=\"report-card\">\n            <h3>{report.title}</h3>\n            <p>\n              <strong>Created Date:</strong> {report.created_date}\n            </p>\n            <p>\n              <strong>Client:</strong> {getClientNameById(report.client)}\n            </p>\n          </div>\n        ))}\n        {filteredReports.length === 0 && <p>No reports match your filters.</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Reports;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}