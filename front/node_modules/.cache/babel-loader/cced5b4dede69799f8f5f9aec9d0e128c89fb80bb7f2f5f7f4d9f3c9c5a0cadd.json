{"ast":null,"code":"export const validateUsername = (username, existingUsers) => {\n  if (!username.trim()) return \"Username is required.\";\n  if (username.length < 3) return \"Username must be at least 3 characters long.\";\n  if (existingUsers.includes(username)) return \"Username is already taken.\";\n  return \"\";\n};\nexport const validateEmail = (email, existingEmails) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!email.trim()) return \"Email is required.\";\n  if (!emailRegex.test(email)) return \"Invalid email format.\";\n  if (existingEmails.includes(email)) return \"Email is already registered.\";\n  return \"\";\n};\nexport const validatePassword = password => {\n  if (!password) return \"Password is required.\";\n  if (password.length < 8) return \"Password must be at least 8 characters long.\";\n  if (!/[A-Z]/.test(password)) return \"Password must contain at least one uppercase letter.\";\n  if (!/[a-z]/.test(password)) return \"Password must contain at least one lowercase letter.\";\n  if (!/[0-9]/.test(password)) return \"Password must contain at least one digit.\";\n  if (!/[@$!%*?&]/.test(password)) return \"Password must contain at least one special character (@$!%*?&).\";\n  return \"\";\n};\nexport const validateConfirmPassword = (password, confirmPassword) => {\n  if (!confirmPassword) return \"Please confirm your password.\";\n  if (password !== confirmPassword) return \"Passwords do not match.\";\n  return \"\";\n};","map":{"version":3,"names":["validateUsername","username","existingUsers","trim","length","includes","validateEmail","email","existingEmails","emailRegex","test","validatePassword","password","validateConfirmPassword","confirmPassword"],"sources":["/home/santo/Desktop/Dev/workshop/front/src/utils/validation.js"],"sourcesContent":["export const validateUsername = (username, existingUsers) => {\n  if (!username.trim()) return \"Username is required.\";\n  if (username.length < 3)\n    return \"Username must be at least 3 characters long.\";\n  if (existingUsers.includes(username)) return \"Username is already taken.\";\n  return \"\";\n};\n\nexport const validateEmail = (email, existingEmails) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!email.trim()) return \"Email is required.\";\n  if (!emailRegex.test(email)) return \"Invalid email format.\";\n  if (existingEmails.includes(email)) return \"Email is already registered.\";\n  return \"\";\n};\n\nexport const validatePassword = (password) => {\n  if (!password) return \"Password is required.\";\n  if (password.length < 8)\n    return \"Password must be at least 8 characters long.\";\n  if (!/[A-Z]/.test(password))\n    return \"Password must contain at least one uppercase letter.\";\n  if (!/[a-z]/.test(password))\n    return \"Password must contain at least one lowercase letter.\";\n  if (!/[0-9]/.test(password))\n    return \"Password must contain at least one digit.\";\n  if (!/[@$!%*?&]/.test(password))\n    return \"Password must contain at least one special character (@$!%*?&).\";\n  return \"\";\n};\n\nexport const validateConfirmPassword = (password, confirmPassword) => {\n  if (!confirmPassword) return \"Please confirm your password.\";\n  if (password !== confirmPassword) return \"Passwords do not match.\";\n  return \"\";\n};\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAGA,CAACC,QAAQ,EAAEC,aAAa,KAAK;EAC3D,IAAI,CAACD,QAAQ,CAACE,IAAI,CAAC,CAAC,EAAE,OAAO,uBAAuB;EACpD,IAAIF,QAAQ,CAACG,MAAM,GAAG,CAAC,EACrB,OAAO,8CAA8C;EACvD,IAAIF,aAAa,CAACG,QAAQ,CAACJ,QAAQ,CAAC,EAAE,OAAO,4BAA4B;EACzE,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMK,aAAa,GAAGA,CAACC,KAAK,EAAEC,cAAc,KAAK;EACtD,MAAMC,UAAU,GAAG,4BAA4B;EAC/C,IAAI,CAACF,KAAK,CAACJ,IAAI,CAAC,CAAC,EAAE,OAAO,oBAAoB;EAC9C,IAAI,CAACM,UAAU,CAACC,IAAI,CAACH,KAAK,CAAC,EAAE,OAAO,uBAAuB;EAC3D,IAAIC,cAAc,CAACH,QAAQ,CAACE,KAAK,CAAC,EAAE,OAAO,8BAA8B;EACzE,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMI,gBAAgB,GAAIC,QAAQ,IAAK;EAC5C,IAAI,CAACA,QAAQ,EAAE,OAAO,uBAAuB;EAC7C,IAAIA,QAAQ,CAACR,MAAM,GAAG,CAAC,EACrB,OAAO,8CAA8C;EACvD,IAAI,CAAC,OAAO,CAACM,IAAI,CAACE,QAAQ,CAAC,EACzB,OAAO,sDAAsD;EAC/D,IAAI,CAAC,OAAO,CAACF,IAAI,CAACE,QAAQ,CAAC,EACzB,OAAO,sDAAsD;EAC/D,IAAI,CAAC,OAAO,CAACF,IAAI,CAACE,QAAQ,CAAC,EACzB,OAAO,2CAA2C;EACpD,IAAI,CAAC,WAAW,CAACF,IAAI,CAACE,QAAQ,CAAC,EAC7B,OAAO,iEAAiE;EAC1E,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAGA,CAACD,QAAQ,EAAEE,eAAe,KAAK;EACpE,IAAI,CAACA,eAAe,EAAE,OAAO,+BAA+B;EAC5D,IAAIF,QAAQ,KAAKE,eAAe,EAAE,OAAO,yBAAyB;EAClE,OAAO,EAAE;AACX,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}