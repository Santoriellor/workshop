services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    secrets:
      - mysql_root_password
      - mysql_user
      - mysql_password
    env_file:
      - ./back/.env
    environment:
      MYSQL_ROOT_PASSWORD: /run/secrets/mysql_root_password
      # The "[Server] root@localhost is created with an empty password !" log is explained here :
      # https://github.com/docker-library/mysql/issues/307#issuecomment-313784886
      MYSQL_USER_FILE: /run/secrets/mysql_user
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_volume:/var/lib/mysql
      - ./mysql/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - mysql_network

  backend:
    build:
      context: .
      dockerfile: back/Dockerfile
    container_name: django
    secrets:
      - django_secret_key
      - mysql_user
      - mysql_password
    env_file:
      - ./back/.env
    environment:
      DJANGO_SECRET_KEY: /run/secrets/django_secret_key
      MYSQL_USER_FILE: /run/secrets/mysql_user
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
      IS_DOCKER: "True" # Docker-specific environment variable to use in DJANGO settings
    depends_on:
      - mysql
    ports:
      - "8000:8000"
    networks:
      - mysql_network

  frontend:
    build:
      context: .
      dockerfile: front/Dockerfile
      target: prod # dev to run test for the frontend or prod to serve the app
    container_name: react
    env_file:
      - ./front/.env
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - mysql_network

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_user:
    file: ./secrets/mysql_user.txt
  mysql_password:
    file: ./secrets/mysql_password.txt
  django_secret_key:
    file: ./secrets/django_secret_key.txt

volumes:
  mysql_volume:

networks:
  mysql_network:
    driver: bridge
